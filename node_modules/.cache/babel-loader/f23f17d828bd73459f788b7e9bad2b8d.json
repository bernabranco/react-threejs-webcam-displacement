{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport texture1 from './circle.png';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    // Global Variables\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }; // CREATE SCENE\n\n    const scene = new THREE.Scene();\n    let baseGeometry = new THREE.SphereBufferGeometry(100, 30, 30);\n    let instancedGeometry = new THREE.BufferGeometry().copy(baseGeometry);\n    let instanceCount = 7000;\n    instancedGeometry.maxInstancedCount = instanceCount;\n    let material = new THREE.ShaderMaterial({\n      fragmentShader: document.getElementById('vertexshader').textContent,\n      vertexShader: document.getElementById('fragmentshader').textContent\n    });\n    let mesh = new THREE.Mesh(instancedGeometry, material); // 1. Create the values for each instance\n\n    let aColor = [];\n    let aCurve = [];\n    let colors = [new THREE.Color(\"#ff3030\"), new THREE.Color(\"#121214\")];\n\n    for (let i = 0; i < instanceCount; i++) {\n      let radius = Math.random(30, 40);\n      let zOffset = Math.random(-5, 5);\n      let progress = Math.random();\n      let speed = Math.random(0.02, 0.07);\n      aCurve.push(radius, progress, zOffset, speed);\n      let color = colors[1];\n      aColor.push(color.r, color.g, color.b);\n    }\n\n    let aCurveFloat32 = new Float32Array(aCurve);\n    instancedGeometry.addAttribute(\"aCurve\", new THREE.InstancedBufferAttribute(aCurveFloat32, 4, false));\n    let aColorFloat32 = new Float32Array(aColor);\n    instancedGeometry.addAttribute(\"aColor\", new THREE.InstancedBufferAttribute(aColorFloat32, 3, false));\n    scene.add(mesh); // LIGHTS\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.1);\n    pointLight.position.x = 2;\n    pointLight.position.y = 3;\n    pointLight.position.z = 1000;\n    scene.add(pointLight); // CAMERA\n\n    const fieldOfView = 75;\n    const aspectRatio = sizes.width / sizes.height;\n    const nearPlane = 1;\n    const farPlane = 3000;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = farPlane / 3;\n    scene.add(camera); // ADD CAMERA CONTROLS\n\n    const OrbitControls = require('three-orbit-controls')(THREE);\n\n    const controls = new OrbitControls(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    /*\tRendererererers particles.\t*/\n\n    renderer.setPixelRatio(window.devicePixelRatio);\n    /*\tProbably 1; unless you're fancy.\t*/\n\n    renderer.setSize(sizes.width, sizes.height);\n    /*\tFull screen baby Wooooo!\t*/\n\n    container.appendChild(renderer.domElement);\n    /* Let's add all this crazy junk to the page.\t*/\n\n    let mouseX = 0;\n    let mouseY = 0;\n\n    function render() {\n      //camera.position.x += (mouseX - camera.position.x) * 0.05;\n      //camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    /* \tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n    \tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n    \tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n    \n    \tlet windowHalfX = sizes.width / 2;\n    \tlet windowHalfY = sizes.height / 2;\n    \tfunction onDocumentMouseMove(e) {\n    \t\tmouseX = e.clientX - windowHalfX;\n    \t\tmouseY = e.clientY - windowHalfY;\n    \t}\n    \n    \tfunction onDocumentTouchStart(e) {\n    \t\tif (e.touches.length === 1) {\n    \t\t\te.preventDefault();\n    \t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n    \t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n    \t\t}\n    \t}\n    \n    \tfunction onDocumentTouchMove(e) {\n    \t\tif (e.touches.length === 1) {\n    \t\t\te.preventDefault();\n    \t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n    \t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n    \t\t}\n    \t} */\n\n    function onWindowResize() {\n      //windowHalfX = window.innerWidth / 2;\n      //windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-2 - cópia 2/src/components/Threejs.js"],"names":["useEffect","THREE","texture1","Threejs","sizes","width","window","innerWidth","height","innerHeight","scene","Scene","baseGeometry","SphereBufferGeometry","instancedGeometry","BufferGeometry","copy","instanceCount","maxInstancedCount","material","ShaderMaterial","fragmentShader","document","getElementById","textContent","vertexShader","mesh","Mesh","aColor","aCurve","colors","Color","i","radius","Math","random","zOffset","progress","speed","push","color","r","g","b","aCurveFloat32","Float32Array","addAttribute","InstancedBufferAttribute","aColorFloat32","add","pointLight","PointLight","position","x","y","z","fieldOfView","aspectRatio","nearPlane","farPlane","camera","PerspectiveCamera","OrbitControls","require","controls","container","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","mouseX","mouseY","render","lookAt","animate","requestAnimationFrame","addEventListener","onWindowResize","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport texture1 from './circle.png'\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\t\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\t\t  \n\t\t\n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\n\t\tlet baseGeometry = new THREE.SphereBufferGeometry(100,30,30);\n\t\tlet instancedGeometry = new THREE.BufferGeometry().copy(baseGeometry);\n\t\tlet instanceCount = 7000;\n\t\tinstancedGeometry.maxInstancedCount = instanceCount;\n\n\t\tlet material = new THREE.ShaderMaterial({\n\t\t\tfragmentShader: document.getElementById( 'vertexshader' ).textContent,\n\t\t\tvertexShader: document.getElementById( 'fragmentshader' ).textContent,\n\t\t})\n\n\t\tlet mesh = new THREE.Mesh(instancedGeometry, material);\n\n\t\t// 1. Create the values for each instance\n\t\tlet aColor = [];\n\t\tlet aCurve = [];\n\t\tlet colors = [ new THREE.Color(\"#ff3030\"), new THREE.Color(\"#121214\")];\n\n\t\tfor (let i = 0; i < instanceCount; i++) {\n\t\tlet radius = Math.random(30, 40);\n\t\tlet zOffset = Math.random(-5, 5);\n\t\tlet progress = Math.random();\n\t\tlet speed = Math.random(0.02, 0.07);\n\t\taCurve.push(radius, progress, zOffset, speed);\n\t\t\n\t\tlet color = colors[1];\n\t\taColor.push(color.r, color.g, color.b);\n\t}\n\n\t\tlet aCurveFloat32 = new Float32Array(aCurve);\n\t\tinstancedGeometry.addAttribute(\n\t\t\"aCurve\",\n\t\tnew THREE.InstancedBufferAttribute(aCurveFloat32, 4, false)\n\t\t);\n\t\tlet aColorFloat32 = new Float32Array(aColor);\n\t\tinstancedGeometry.addAttribute(\n\t\t\"aColor\",\n\t\tnew THREE.InstancedBufferAttribute(aColorFloat32, 3, false)\n\t\t);\n\t\t\n\n\t\tscene.add(mesh);\n\n\t\t// LIGHTS\n\t\tconst pointLight = new THREE.PointLight(0xffffff, 0.1)\n\t\tpointLight.position.x = 2\n\t\tpointLight.position.y = 3\n\t\tpointLight.position.z = 1000\n\t\tscene.add(pointLight)\n\n\t\t// CAMERA\n        const fieldOfView = 75;\n        const aspectRatio = sizes.width / sizes.height;\n        const nearPlane = 1;\n\t\tconst farPlane = 3000;\n\n\t\tconst camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\tcamera.position.x = 0;\n\t\tcamera.position.y = 0;\n\t\tcamera.position.z = farPlane/3;\n\t\tscene.add(camera)\n\n\t\t// ADD CAMERA CONTROLS\n\t\tconst OrbitControls = require('three-orbit-controls')(THREE)\n        const controls = new OrbitControls(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer(); /*\tRendererererers particles.\t*/\n\t\trenderer.setPixelRatio(window.devicePixelRatio); /*\tProbably 1; unless you're fancy.\t*/\n\t\trenderer.setSize(sizes.width, sizes.height); /*\tFull screen baby Wooooo!\t*/\n\t\tcontainer.appendChild(renderer.domElement); /* Let's add all this crazy junk to the page.\t*/\n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\t\tfunction render() {\n\t\t\t//camera.position.x += (mouseX - camera.position.x) * 0.05;\n\t\t\t//camera.position.y += (-mouseY - camera.position.y) * 0.05;\n\t\t\tcamera.lookAt(scene.position);\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t/* \tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t} */\n\t\n\t\tfunction onWindowResize() {\n\t\t\t//windowHalfX = window.innerWidth / 2;\n\t\t\t//windowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}