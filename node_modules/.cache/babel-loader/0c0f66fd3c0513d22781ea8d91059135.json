{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport * as THREE from 'three';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    let scene, camera, renderer;\n    let material, geometry, mesh;\n\n    function init() {\n      //create scene and camera\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(10, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 1; //create render, canvas and add canvas to dom\n\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n    }\n\n    function render() {\n      //create GPU material, geometry and mesh\n      material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: {\n            value: 1.0\n          },\n          resolution: {\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight)\n          },\n          mousex: {\n            value: 0\n          },\n          mousey: {\n            value: 0\n          }\n        },\n        vertexShader: document.getElementById('vertexShader').textContent,\n        fragmentShader: document.getElementById('fragmentShader').textContent\n      });\n      geometry = new THREE.PlaneGeometry(5, 5, 1);\n      mesh = new THREE.Mesh(geometry, material); //add mesh to scene\n\n      scene.add(mesh);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera); //define shader time\n\n      material.uniforms.time.value += 0.04;\n    }\n\n    ;\n    init();\n    render();\n    animate(); //cleanup gl\n\n    geometry.dispose();\n    material.dispose();\n    mesh.clear();\n    mesh.remove();\n    renderer.clear();\n    renderer.dispose(); //shader interactive with mouse\n\n    window.addEventListener(\"mousemove\", shaderAnimate);\n\n    function shaderAnimate(e) {\n      const canvas = document.querySelector(\"canvas\");\n\n      if (e.pageX >= canvas.getBoundingClientRect().left) {\n        material.uniforms.mousex.value = e.pageX * 0.001;\n        material.uniforms.mousey.value = e.pageY * 0.001;\n      }\n    }\n\n    window.addEventListener('resize', () => handleResize());\n\n    function handleResize() {\n      // Update camera\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix(); // Update renderer\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    return () => {\n      //remove event listeners\n      window.removeEventListener(\"mousemove\", shaderAnimate);\n      window.removeEventListener('resize', handleResize); //remove canvas from tree\n\n      document.body.removeChild(renderer.domElement); //remove gpu assets\n\n      geometry.dispose();\n      material.dispose();\n      renderer.dispose();\n      scene.remove(mesh);\n      cancelAnimationFrame(animate);\n    };\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-1/src/components/Threejs.js"],"names":["React","useEffect","THREE","Threejs","scene","camera","renderer","material","geometry","mesh","init","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","setSize","document","body","appendChild","domElement","render","ShaderMaterial","uniforms","time","value","resolution","Vector2","mousex","mousey","vertexShader","getElementById","textContent","fragmentShader","PlaneGeometry","Mesh","add","animate","requestAnimationFrame","dispose","clear","remove","addEventListener","shaderAnimate","e","canvas","querySelector","pageX","getBoundingClientRect","left","pageY","handleResize","aspect","updateProjectionMatrix","removeEventListener","removeChild","cancelAnimationFrame"],"mappings":"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","sourcesContent":["\nimport {React, useEffect} from 'react'\nimport * as THREE from 'three';\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\n\t\tlet scene, camera, renderer;\n\t\tlet material, geometry, mesh;\n\n\t\tfunction init(){\n\t\t\t//create scene and camera\n\t\t\tscene = new THREE.Scene();\n\t\t\tcamera = new THREE.PerspectiveCamera( 10, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\t\t\tcamera.position.z = 1;\n\n\t\t\t//create render, canvas and add canvas to dom\n\t\t\trenderer = new THREE.WebGLRenderer();\n\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\tdocument.body.appendChild( renderer.domElement );\n\t\t}\n\n\t\tfunction render(){\n\n\t\t\t//create GPU material, geometry and mesh\n\t\t\tmaterial = new THREE.ShaderMaterial( \n\t\t\t{\t   \n\t\t\tuniforms: {\n\t\t\t\ttime: { value: 1.0 },\n\t\t\t\tresolution: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n\t\t\t\tmousex: {value: 0},\n\t\t\t\tmousey: {value:0}\n\t\t\t},\n\t\t\tvertexShader: document.getElementById( 'vertexShader' ).textContent,\n\t\t\tfragmentShader: document.getElementById( 'fragmentShader' ).textContent\n\t\t\t} \n\t\t);\n\t\t\n\t\tgeometry = new THREE.PlaneGeometry(5,5,1);\n\t\tmesh = new THREE.Mesh( geometry, material );\n\n\t\t//add mesh to scene\n\t\tscene.add(mesh);\n\n\t\t\n\n\t\t}\n\n\t\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame( animate );\n\t\t\trenderer.render( scene, camera );\n\t\t\t\n\t\t\t//define shader time\n\t\t\tmaterial.uniforms.time.value += 0.04;\t\n\t\t};\n\t\t\n\t\tinit();\n\t\trender();\n\t\tanimate();\n\n\t\t//cleanup gl\n\t\tgeometry.dispose();\n\t\tmaterial.dispose();\n\t\tmesh.clear();\n\t\tmesh.remove();\n\t\trenderer.clear();\n\t\trenderer.dispose();\n\t\t\t\n\t\t//shader interactive with mouse\n\t\twindow.addEventListener(\"mousemove\", shaderAnimate);\n\t\tfunction shaderAnimate(e){\n\t\t\tconst canvas = document.querySelector(\"canvas\");\n\t\t\tif (e.pageX >= canvas.getBoundingClientRect().left){\n\t\t\t\tmaterial.uniforms.mousex.value = e.pageX*0.001;\n\t\t\t\tmaterial.uniforms.mousey.value = e.pageY*0.001;\n\t\t\t}\n\t\t}\n\n\t    window.addEventListener('resize', ()=>handleResize());\n        function handleResize(){\n\t\t\t// Update camera\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\t// Update renderer\n\t\t    renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\n        return () => {\n\t\t\t//remove event listeners\n\t\t\twindow.removeEventListener(\"mousemove\", shaderAnimate);\n\t\t\twindow.removeEventListener('resize',handleResize);\n\t\t\t//remove canvas from tree\n\t\t\tdocument.body.removeChild(renderer.domElement);\t\n\t\t\t//remove gpu assets\n\t\t\tgeometry.dispose();\n\t\t\tmaterial.dispose();\n\t\t\trenderer.dispose();\n\t\t\tscene.remove(mesh);\n\t\t\tcancelAnimationFrame(animate);\n\t\t}\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}