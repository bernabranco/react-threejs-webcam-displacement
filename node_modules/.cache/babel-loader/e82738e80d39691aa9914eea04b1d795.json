{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport texture1 from './circle.png';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    // Global Variables\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }; // CREATE SCENE\n\n    const scene = new THREE.Scene(); // CREATE GEOMETRY FROM CUSTOM POINTS\n\n    let particles = [];\n    const particleCount = 20000;\n\n    for (let i = 0; i < particleCount; i++) {\n      var vertex = new THREE.Vector3();\n      vertex.x = Math.random() * 2000 - 1000;\n      vertex.y = Math.random() * 2000 - 1000;\n      vertex.z = Math.random() * 2000 - 1000;\n      particles.push(vertex);\n    }\n\n    const geometry = new THREE.BufferGeometry().setFromPoints(particles); // MATERIAL WITH IMPORTED TEXTURE\n\n    const texture = new THREE.TextureLoader().load(texture1);\n    const material = new THREE.PointsMaterial({\n      size: 20,\n      depthTest: false,\n      //for transparent png\n      transparent: true,\n      //for transparent png\n      fog: false,\n      map: texture\n    }); // MESH\n\n    const mesh = new THREE.Points(geometry, material);\n    mesh.scale.set(1, 1, 1);\n    scene.add(mesh); // LIGHTS\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.1);\n    pointLight.position.x = 2;\n    pointLight.position.y = 3;\n    pointLight.position.z = 1000;\n    scene.add(pointLight); // CAMERA\n\n    const fieldOfView = 75;\n    const aspectRatio = sizes.width / sizes.height;\n    const nearPlane = 1;\n    const farPlane = 3000;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = farPlane / 3;\n    scene.add(camera); // ADD CAMERA CONTROLS\n\n    const OrbitControls = require('three-orbit-controls')(THREE);\n\n    const controls = new OrbitControls(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    /*\tRendererererers particles.\t*/\n\n    renderer.setPixelRatio(window.devicePixelRatio);\n    /*\tProbably 1; unless you're fancy.\t*/\n\n    renderer.setSize(sizes.width, sizes.height);\n    /*\tFull screen baby Wooooo!\t*/\n\n    container.appendChild(renderer.domElement);\n    /* Let's add all this crazy junk to the page.\t*/\n\n    let mouseX = 0;\n    let mouseY = 0;\n\n    function render() {\n      camera.position.x += (mouseX - camera.position.x) * 0.05;\n      camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    let windowHalfX = sizes.width / 2;\n    let windowHalfY = sizes.height / 2;\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    }\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-2 - cópia/src/components/Threejs.js"],"names":["useEffect","THREE","texture1","Threejs","sizes","width","window","innerWidth","height","innerHeight","scene","Scene","particles","particleCount","i","vertex","Vector3","x","Math","random","y","z","push","geometry","BufferGeometry","setFromPoints","texture","TextureLoader","load","material","PointsMaterial","size","depthTest","transparent","fog","map","mesh","Points","scale","set","add","pointLight","PointLight","position","fieldOfView","aspectRatio","nearPlane","farPlane","camera","PerspectiveCamera","OrbitControls","require","controls","container","document","getElementById","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","mouseX","mouseY","render","lookAt","animate","requestAnimationFrame","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","windowHalfX","windowHalfY","e","clientX","clientY","touches","length","preventDefault","pageX","pageY","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport texture1 from './circle.png'\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\t\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\t\t  \n\t\t\n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\t\t\n\t\t// CREATE GEOMETRY FROM CUSTOM POINTS\n\t\tlet particles = [];\n\t\tconst particleCount = 20000;\n\n\t\tfor (let i = 0; i < particleCount; i++) {\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvertex.x = Math.random() * 2000 - 1000;\n\t\t\tvertex.y = Math.random() * 2000 - 1000;\n\t\t\tvertex.z = Math.random() * 2000 - 1000;\n\t\t\tparticles.push(vertex);\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry().setFromPoints( particles );\n\n\t\t// MATERIAL WITH IMPORTED TEXTURE\n\t\tconst texture = new THREE.TextureLoader().load(texture1);\n\t\tconst material = new THREE.PointsMaterial( {\n\t\t\tsize:20,\n\t\t\tdepthTest:false, //for transparent png\n\t\t\ttransparent:true, //for transparent png\n\t\t\tfog: false,\n\t\t\tmap: texture\n\t\t} );\n\n\t\t// MESH\n\t\tconst mesh = new THREE.Points( geometry, material );\n\t\tmesh.scale.set( 1, 1, 1 );\n\t\tscene.add(mesh);\n\n\t\t// LIGHTS\n\t\tconst pointLight = new THREE.PointLight(0xffffff, 0.1)\n\t\tpointLight.position.x = 2\n\t\tpointLight.position.y = 3\n\t\tpointLight.position.z = 1000\n\t\tscene.add(pointLight)\n\n\t\t// CAMERA\n        const fieldOfView = 75;\n        const aspectRatio = sizes.width / sizes.height;\n        const nearPlane = 1;\n\t\tconst farPlane = 3000;\n\n\t\tconst camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\tcamera.position.x = 0;\n\t\tcamera.position.y = 0;\n\t\tcamera.position.z = farPlane/3;\n\t\tscene.add(camera)\n\n\t\t// ADD CAMERA CONTROLS\n\t\tconst OrbitControls = require('three-orbit-controls')(THREE)\n        const controls = new OrbitControls(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer(); /*\tRendererererers particles.\t*/\n\t\trenderer.setPixelRatio(window.devicePixelRatio); /*\tProbably 1; unless you're fancy.\t*/\n\t\trenderer.setSize(sizes.width, sizes.height); /*\tFull screen baby Wooooo!\t*/\n\t\tcontainer.appendChild(renderer.domElement); /* Let's add all this crazy junk to the page.\t*/\n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\t\tfunction render() {\n\t\t\tcamera.position.x += (mouseX - camera.position.x) * 0.05;\n\t\t\tcamera.position.y += (-mouseY - camera.position.y) * 0.05;\n\t\t\tcamera.lookAt(scene.position);\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\t\t\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onWindowResize() {\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}