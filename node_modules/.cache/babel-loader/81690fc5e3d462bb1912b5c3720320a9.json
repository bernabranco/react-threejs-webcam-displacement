{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport * as THREE from 'three';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    var scene, camera, renderer;\n\n    var OrbitControls = require('three-orbit-controls')(THREE);\n\n    const loader = new THREE.TextureLoader();\n    const circle = loader.load('./images/circle.png'); // I guess we need this stuff too\n\n    var container,\n        HEIGHT,\n        WIDTH,\n        fieldOfView,\n        aspectRatio,\n        nearPlane,\n        farPlane,\n        geometry,\n        mesh,\n        particleCount,\n        i,\n        mouseX = 0,\n        mouseY = 0,\n        windowHalfX,\n        windowHalfY,\n        cameraZ,\n        fogHex,\n        fogDensity;\n    let controls;\n    let points;\n    points = [];\n    particleCount = 20000;\n    init();\n    animate();\n\n    function init() {\n      HEIGHT = window.innerHeight;\n      WIDTH = window.innerWidth;\n      windowHalfX = WIDTH / 2;\n      windowHalfY = HEIGHT / 2;\n      fieldOfView = 75;\n      aspectRatio = WIDTH / HEIGHT;\n      nearPlane = 1;\n      farPlane = 3000;\n      /* \tfieldOfView — Camera frustum vertical field of view.\n      aspectRatio — Camera frustum aspect ratio.\n      nearPlane — Camera frustum near plane.\n      farPlane — Camera frustum far plane.\n      \t- https://threejs.org/docs/#Reference/Cameras/PerspectiveCamera\n      \tIn geometry, a frustum (plural: frusta or frustums)\n      is the portion of a solid (normally a cone or pyramid)\n      that lies between two parallel planes cutting it. - wikipedia.\t\t*/\n\n      cameraZ = farPlane / 3;\n      /*\tSo, 1000? Yes! move on!\t*/\n\n      camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n      camera.position.z = cameraZ; //camera controls\n\n      controls = new OrbitControls(camera);\n      scene = new THREE.Scene();\n      scene.fog = new THREE.FogExp2(fogHex, fogDensity);\n      container = document.createElement('div');\n      document.body.appendChild(container);\n      document.body.style.margin = 0;\n      document.body.style.overflow = 'hidden';\n      /* Leagues under the sea */\n\n      /*\tHope you took your motion sickness pills;\n      We're about to get loopy.\t*/\n\n      for (i = 0; i < particleCount; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = Math.random() * 2000 - 1000;\n        vertex.y = Math.random() * 2000 - 1000;\n        vertex.z = Math.random() * 2000 - 1000;\n        points.push(vertex);\n      }\n\n      geometry = new THREE.BufferGeometry().setFromPoints(points);\n      const geometry2 = new THREE.SphereGeometry(500, 32, 32);\n      let uniforms = {\n        u_size: {\n          value: 10.0\n        }\n      };\n      const material = new THREE.PointsMaterial({\n        size: 10,\n        map: circle,\n        transparent: true\n      });\n      const shaderMaterial = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: document.getElementById('vertexshader').textContent,\n        fragmentShader: document.getElementById('fragmentshader').textContent\n      });\n      mesh = new THREE.Points(geometry, shaderMaterial);\n      mesh.scale.set(1, 1, 1);\n      scene.add(mesh);\n      /*\tIf my calculations are correct, when this baby hits 88 miles per hour...\n      you're gonna see some serious shit.\t*/\n\n      renderer = new THREE.WebGLRenderer();\n      /*\tRendererererers particles.\t*/\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n      /*\tProbably 1; unless you're fancy.\t*/\n\n      renderer.setSize(WIDTH, HEIGHT);\n      /*\tFull screen baby Wooooo!\t*/\n\n      container.appendChild(renderer.domElement);\n      /* Let's add all this crazy junk to the page.\t*/\n\n      /* Event Listeners */\n\n      window.addEventListener('resize', onWindowResize, false);\n      document.addEventListener('mousemove', onDocumentMouseMove, false);\n      document.addEventListener('touchstart', onDocumentTouchStart, false);\n      document.addEventListener('touchmove', onDocumentTouchMove, false);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    function render() {\n      var time = Date.now() * 0.5;\n      camera.position.x += (mouseX - camera.position.x) * 0.05;\n      camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    }\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    }\n    /*\tMobile users?  I got your back homey\t*/\n\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-2 - cópia/src/components/Threejs.js"],"names":["React","useEffect","THREE","Threejs","scene","camera","renderer","OrbitControls","require","loader","TextureLoader","circle","load","container","HEIGHT","WIDTH","fieldOfView","aspectRatio","nearPlane","farPlane","geometry","mesh","particleCount","i","mouseX","mouseY","windowHalfX","windowHalfY","cameraZ","fogHex","fogDensity","controls","points","init","animate","window","innerHeight","innerWidth","PerspectiveCamera","position","z","Scene","fog","FogExp2","document","createElement","body","appendChild","style","margin","overflow","vertex","Vector3","x","Math","random","y","push","BufferGeometry","setFromPoints","geometry2","SphereGeometry","uniforms","u_size","value","material","PointsMaterial","size","map","transparent","shaderMaterial","ShaderMaterial","vertexShader","getElementById","textContent","fragmentShader","Points","scale","set","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","requestAnimationFrame","render","time","Date","now","lookAt","e","clientX","clientY","touches","length","preventDefault","pageX","pageY","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {React, useEffect} from 'react'\nimport * as THREE from 'three';\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\t\n\t\tvar scene, camera, renderer;\n\t\tvar OrbitControls = require('three-orbit-controls')(THREE)\n\n\t\tconst loader = new THREE.TextureLoader();\n\t\tconst circle = loader.load('./images/circle.png');\n\t\t\n\t\t// I guess we need this stuff too\n\t\tvar container, HEIGHT,\n\t\t\tWIDTH, fieldOfView, aspectRatio,\n\t\t\tnearPlane, farPlane,\n\t\t\tgeometry, mesh, particleCount,\n\t\t\ti,\n\t\t\tmouseX = 0,\n\t\t\tmouseY = 0,\n\t\t\twindowHalfX, windowHalfY, cameraZ,\n\t\t\tfogHex, fogDensity;\n\n\t\tlet controls\n\t\tlet points;\n\t\tpoints = [];\n\t\tparticleCount = 20000;\n\t\n\t\tinit();\n\t\tanimate();\n\t\n\t\tfunction init() {\n\t\n\t\t\tHEIGHT = window.innerHeight;\n\t\t\tWIDTH = window.innerWidth;\n\t\t\twindowHalfX = WIDTH / 2;\n\t\t\twindowHalfY = HEIGHT / 2;\n\t\n\t\t\tfieldOfView = 75;\n\t\t\taspectRatio = WIDTH / HEIGHT;\n\t\t\tnearPlane = 1;\n\t\t\tfarPlane = 3000;\n\t\n\t\t\t/* \tfieldOfView — Camera frustum vertical field of view.\n\t\taspectRatio — Camera frustum aspect ratio.\n\t\tnearPlane — Camera frustum near plane.\n\t\tfarPlane — Camera frustum far plane.\n\t\n\t\t- https://threejs.org/docs/#Reference/Cameras/PerspectiveCamera\n\t\n\t\tIn geometry, a frustum (plural: frusta or frustums)\n\t\tis the portion of a solid (normally a cone or pyramid)\n\t\tthat lies between two parallel planes cutting it. - wikipedia.\t\t*/\n\t\n\t\t\tcameraZ = farPlane / 3; /*\tSo, 1000? Yes! move on!\t*/\n\t\n\t\t\tcamera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\t\tcamera.position.z = cameraZ;\n\t\t\t\n\t\t\t//camera controls\n\t\t\tcontrols = new OrbitControls(camera)\n\t\n\t\t\tscene = new THREE.Scene();\n\t\t\tscene.fog = new THREE.FogExp2(fogHex, fogDensity);\n\t\n\t\t\tcontainer = document.createElement('div');\n\t\t\tdocument.body.appendChild(container);\n\t\t\tdocument.body.style.margin = 0;\n\t\t\tdocument.body.style.overflow = 'hidden';\n\t\n\t        /* Leagues under the sea */\n\t\n\t\t\t/*\tHope you took your motion sickness pills;\n\t\tWe're about to get loopy.\t*/\n\t\n\t\t\tfor (i = 0; i < particleCount; i++) {\n\t\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvertex.x = Math.random() * 2000 - 1000;\n\t\t\t\tvertex.y = Math.random() * 2000 - 1000;\n\t\t\t\tvertex.z = Math.random() * 2000 - 1000;\n\t\n\t\t\t\tpoints.push(vertex);\n\t\t\t}\n\n\t\t\tgeometry = new THREE.BufferGeometry().setFromPoints( points );\n\t\t\tconst geometry2 = new THREE.SphereGeometry( 500, 32, 32 );\n\n\t\t\tlet uniforms = {\n\n\t\t\t\tu_size: { value: 10.0 }\n\n\t\t\t};\n\n\t\t\tconst material = new THREE.PointsMaterial( \n\t\t\t\t{ size: 10, \n\t\t\t\t  map:circle,\n\t\t\t\t  transparent: true,\n\t\t\t\t} );\n\t\t\n\t\t\tconst shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\t\tuniforms: uniforms,\n\t\t\t\tvertexShader: document.getElementById( 'vertexshader' ).textContent,\n\t\t\t\tfragmentShader: document.getElementById( 'fragmentshader' ).textContent,\n\n\t\t\t} );\n\t\n\n\t\t\tmesh = new THREE.Points( geometry, shaderMaterial );\n\t\t\tmesh.scale.set( 1, 1, 1 );\n\t\t\t\n\t\t\tscene.add(mesh);\n\n\t\t\t/*\tIf my calculations are correct, when this baby hits 88 miles per hour...\n\t\tyou're gonna see some serious shit.\t*/\n\t\n\t\t\trenderer = new THREE.WebGLRenderer(); /*\tRendererererers particles.\t*/\n\t\t\trenderer.setPixelRatio(window.devicePixelRatio); /*\tProbably 1; unless you're fancy.\t*/\n\t\t\trenderer.setSize(WIDTH, HEIGHT); /*\tFull screen baby Wooooo!\t*/\n\t\n\t\t\tcontainer.appendChild(renderer.domElement); /* Let's add all this crazy junk to the page.\t*/\n\t\n\t\n\t\n\t\t\t/* Event Listeners */\n\t\n\t\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\t\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\t}\n\t\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\t\n\t\t\trender();\n\t\t\t\n\t\t}\n\t\n\t\n\t\tfunction render() {\n\t\t\tvar time = Date.now() * 0.5;\n\t\n\t\t\tcamera.position.x += (mouseX - camera.position.x) * 0.05;\n\t\t\tcamera.position.y += (-mouseY - camera.position.y) * 0.05;\n\t\n\t\t\tcamera.lookAt(scene.position);\n\n\t\n\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\t\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\t/*\tMobile users?  I got your back homey\t*/\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\n\t\t\tif (e.touches.length === 1) {\n\t\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\n\t\t\tif (e.touches.length === 1) {\n\t\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onWindowResize() {\n\t\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}