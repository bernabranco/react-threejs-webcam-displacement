{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport texture1 from './circle.png';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    // Global Variables\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    let pointSize = 20;\n    let speed = 0.001; // CREATE SCENE\n\n    const scene = new THREE.Scene(); // CREATE GEOMETRY FROM CUSTOM POINTS\n\n    const particleCount = 20000;\n    let particles = new Float32Array(particleCount * 3);\n    console.log(particles);\n\n    for (let i = 1; i < particleCount; i++) {\n      particles[i] = Math.random() * 2000 - 1000;\n    }\n\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3)); // MATERIAL WITH IMPORTED TEXTURE\n\n    const texture = new THREE.TextureLoader().load(texture1);\n    let material = new THREE.PointsMaterial({\n      size: pointSize,\n      depthTest: false,\n      //for transparent png\n      transparent: true,\n      //for transparent png\n      fog: false,\n      map: texture\n    }); // MESH\n\n    const mesh = new THREE.Points(geometry, material);\n    mesh.scale.set(1, 1, 1);\n    scene.add(mesh); // LIGHTS\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.1);\n    pointLight.position.x = 2;\n    pointLight.position.y = 3;\n    pointLight.position.z = 1000;\n    scene.add(pointLight); // CAMERA\n\n    const fieldOfView = 75;\n    const aspectRatio = sizes.width / sizes.height;\n    const nearPlane = 1;\n    const farPlane = 3000;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = farPlane / 3;\n    scene.add(camera); // ADD CAMERA CONTROLS\n\n    const OrbitControls = require('three-orbit-controls')(THREE);\n\n    const controls = new OrbitControls(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(sizes.width, sizes.height);\n    container.appendChild(renderer.domElement);\n    let mouseX = 0;\n    let mouseY = 0;\n\n    function render() {\n      let time = Date.now() * speed;\n      particles[0] = particles[4]; //ANIMATE PARTICLE X\n\n      for (let i = 1; i <= particleCount; i += 3) {\n        particles[i] = 500; //particles[i] = Math.sin(0.002*i+time*0.1)*600;\n        //material.size = 3+Math.abs(Math.sin(0.00001*i+time*0.1)*20);\t\n      } //ANIMATE PARTICLE Y\n\n\n      for (let i = 1; i <= particleCount; i += 3) {\n        particles[i] = 0; //particles[i] = Math.cos(0.002*i+time*0.1)*600;\n      } //ANIMATE PARTICLE Z\n\n\n      for (let i = 2; i <= particleCount; i += 3) {\n        particles[i] = 50 * Math.sin(i * 0.02 + time) * 0.0005 * i; //particles[i] = Math.sin(0.002*i+time*0.1)*600;\n      } //UPDATE GEOMETRY POSITION\n\n\n      geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3));\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    /* \tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n    \tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n    \tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n    \n    \tlet windowHalfX = sizes.width / 2;\n    \tlet windowHalfY = sizes.height / 2;\n    \tfunction onDocumentMouseMove(e) {\n    \t\tmouseX = e.clientX - windowHalfX;\n    \t\tmouseY = e.clientY - windowHalfY;\n    \t}\n    \n    \tfunction onDocumentTouchStart(e) {\n    \t\tif (e.touches.length === 1) {\n    \t\t\te.preventDefault();\n    \t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n    \t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n    \t\t}\n    \t}\n    \n    \tfunction onDocumentTouchMove(e) {\n    \t\tif (e.touches.length === 1) {\n    \t\t\te.preventDefault();\n    \t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n    \t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n    \t\t}\n    \t} */\n\n    function onWindowResize() {\n      //windowHalfX = window.innerWidth / 2;\n      //windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-2 - cópia 2/src/components/Threejs.js"],"names":["useEffect","THREE","texture1","Threejs","sizes","width","window","innerWidth","height","innerHeight","pointSize","speed","scene","Scene","particleCount","particles","Float32Array","console","log","i","Math","random","geometry","BufferGeometry","setAttribute","BufferAttribute","texture","TextureLoader","load","material","PointsMaterial","size","depthTest","transparent","fog","map","mesh","Points","scale","set","add","pointLight","PointLight","position","x","y","z","fieldOfView","aspectRatio","nearPlane","farPlane","camera","PerspectiveCamera","OrbitControls","require","controls","container","document","getElementById","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","mouseX","mouseY","render","time","Date","now","sin","animate","requestAnimationFrame","addEventListener","onWindowResize","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport texture1 from './circle.png'\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\t\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\n\t\tlet pointSize = 20;\n\t\tlet speed = 0.001;\n\t\t  \n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\t\t\n\t\t// CREATE GEOMETRY FROM CUSTOM POINTS\n\t\tconst particleCount = 20000;\n\t\tlet particles = new Float32Array(particleCount*3);\n\t\tconsole.log(particles)\n\n\t\tfor (let i = 1; i < particleCount; i++) {\n\t\t\tparticles[i] = Math.random() * 2000 - 1000;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles,3));\n\n\t\t// MATERIAL WITH IMPORTED TEXTURE\n\t\tconst texture = new THREE.TextureLoader().load(texture1);\n\t\tlet material = new THREE.PointsMaterial( {\n\t\t\tsize:pointSize,\n\t\t\tdepthTest:false, //for transparent png\n\t\t\ttransparent:true, //for transparent png\n\t\t\tfog: false,\n\t\t\tmap: texture\n\t\t} );\n\n\t\t// MESH\n\t\tconst mesh = new THREE.Points( geometry, material );\n\t\tmesh.scale.set( 1, 1, 1 );\n\t\tscene.add(mesh);\n\n\t\t// LIGHTS\n\t\tconst pointLight = new THREE.PointLight(0xffffff, 0.1)\n\t\tpointLight.position.x = 2\n\t\tpointLight.position.y = 3\n\t\tpointLight.position.z = 1000\n\t\tscene.add(pointLight)\n\n\t\t// CAMERA\n        const fieldOfView = 75;\n        const aspectRatio = sizes.width / sizes.height;\n        const nearPlane = 1;\n\t\tconst farPlane = 3000;\n\n\t\tconst camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\tcamera.position.x = 0;\n\t\tcamera.position.y = 0;\n\t\tcamera.position.z = farPlane/3;\n\t\tscene.add(camera)\n\n\t\t// ADD CAMERA CONTROLS\n\t\tconst OrbitControls = require('three-orbit-controls')(THREE)\n        const controls = new OrbitControls(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer(); \n\t\trenderer.setPixelRatio(window.devicePixelRatio); \t\n\t\trenderer.setSize(sizes.width, sizes.height); \n\t\tcontainer.appendChild(renderer.domElement); \n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\t\tfunction render() {\n\n\t\t\tlet time = Date.now()*speed;\n\n\t\t\tparticles[0]=particles[4];\n\n\t\t\t//ANIMATE PARTICLE X\n\t\t\tfor (let i = 1; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 500;\n\t\t\t//particles[i] = Math.sin(0.002*i+time*0.1)*600;\n\t\t    //material.size = 3+Math.abs(Math.sin(0.00001*i+time*0.1)*20);\t\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Y\n\t\t\tfor (let i = 1; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 0;\n\t\t\t//particles[i] = Math.cos(0.002*i+time*0.1)*600;\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Z\n\t\t\tfor (let i = 2; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 50*Math.sin(i*0.02+time)*0.0005*i;\n\t\t\t//particles[i] = Math.sin(0.002*i+time*0.1)*600;\n\t\t\t}\n\n\t\t\t//UPDATE GEOMETRY POSITION\n\t\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles,3));\n\t\t\t\n\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t/* \tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t} */\n\t\n\t\tfunction onWindowResize() {\n\t\t\t//windowHalfX = window.innerWidth / 2;\n\t\t\t//windowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}