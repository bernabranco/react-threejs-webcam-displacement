{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport texture1 from './circle.png';\nimport Stats from './Stats.js';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    //GET PERFORMACE STATS, COMMENT TO HIDE\n    (function () {\n      var script = document.createElement('script');\n\n      script.onload = function () {\n        var stats = new Stats();\n        document.body.appendChild(stats.dom);\n        requestAnimationFrame(function loop() {\n          stats.update();\n          requestAnimationFrame(loop);\n        });\n      };\n\n      script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\n      document.head.appendChild(script);\n    })(); // Global Variables\n\n\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    const particleCount = 20000;\n    let pointSize = 10;\n    let speed = 0.0001; // CREATE SCENE\n\n    const scene = new THREE.Scene(); // CREATE GEOMETRY FROM CUSTOM POINTS\n\n    let particles = new Float32Array(particleCount * 3);\n    console.log(particles);\n\n    for (let i = 1; i <= particleCount; i++) {\n      particles[i] = Math.random() * 2000 - 1000;\n    }\n\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3)); // MATERIAL WITH IMPORTED TEXTURE\n\n    const texture = new THREE.TextureLoader().load(texture1);\n    let material = new THREE.PointsMaterial({\n      size: pointSize,\n      depthTest: false,\n      //for transparent png\n      transparent: true,\n      //for transparent png\n      fog: false,\n      map: texture\n    }); // MESH\n\n    const mesh = new THREE.Points(geometry, material);\n    mesh.scale.set(1, 1, 1);\n    scene.add(mesh); // LIGHTS\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.1);\n    pointLight.position.x = 2;\n    pointLight.position.y = 3;\n    pointLight.position.z = 1000;\n    scene.add(pointLight); // CAMERA\n\n    const fieldOfView = 75;\n    const aspectRatio = sizes.width / sizes.height;\n    const nearPlane = 1;\n    const farPlane = 3000;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = farPlane / 3;\n    scene.add(camera); // ADD CAMERA CONTROLS\n\n    const OrbitControls = require('three-orbit-controls')(THREE);\n\n    const controls = new OrbitControls(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(sizes.width, sizes.height);\n    container.appendChild(renderer.domElement);\n    let mouseX = 0;\n    let mouseY = 0;\n\n    function render() {\n      let time = Date.now() * speed; //ANIMATE PARTICLE X\n\n      for (let i = 1; i <= particleCount; i += 3) {\n        particles[i] = 300 * Math.sin(i * 0.003 + time); //particles[i] = Math.sin(0.2*i+time*0.1)*300;\n        //material.size = 3+Math.abs(Math.sin(0.00001*i+time*0.1)*20);\t\n      } //ANIMATE PARTICLE Y\n\n\n      for (let i = 2; i <= particleCount; i += 3) {\n        particles[i] = 300 * Math.cos(i * 0.001 + time); //particles[i] = Math.cos(0.002*i+time*0.1)*600;\n      } //ANIMATE PARTICLE Z\n\n\n      for (let i = 3; i <= particleCount; i += 3) {\n        particles[i] = 300 * Math.sin(i * 0.009 + time); //particles[i] = Math.sin(0.002*i+time*0.1)*600;\n      } //UPDATE GEOMETRY POSITION\n\n\n      geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3));\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    let windowHalfX = sizes.width / 2;\n    let windowHalfY = sizes.height / 2;\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    }\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-buffer-geometry2/src/components/Threejs.js"],"names":["useEffect","THREE","texture1","Stats","Threejs","script","document","createElement","onload","stats","body","appendChild","dom","requestAnimationFrame","loop","update","src","head","sizes","width","window","innerWidth","height","innerHeight","particleCount","pointSize","speed","scene","Scene","particles","Float32Array","console","log","i","Math","random","geometry","BufferGeometry","setAttribute","BufferAttribute","texture","TextureLoader","load","material","PointsMaterial","size","depthTest","transparent","fog","map","mesh","Points","scale","set","add","pointLight","PointLight","position","x","y","z","fieldOfView","aspectRatio","nearPlane","farPlane","camera","PerspectiveCamera","OrbitControls","require","controls","container","getElementById","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","mouseX","mouseY","render","time","Date","now","sin","cos","animate","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","windowHalfX","windowHalfY","e","clientX","clientY","touches","length","preventDefault","pageX","pageY","aspect","updateProjectionMatrix"],"mappings":";;AACA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAEjCJ,EAAAA,SAAS,CAAC,MAAM;AAEf;AACA,KAAC,YAAU;AAAC,UAAIK,MAAM,GAACC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAX;;AAA4CF,MAAAA,MAAM,CAACG,MAAP,GAAc,YAAU;AAAC,YAAIC,KAAK,GAAC,IAAIN,KAAJ,EAAV;AAAsBG,QAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BF,KAAK,CAACG,GAAhC;AAAqCC,QAAAA,qBAAqB,CAAC,SAASC,IAAT,GAAe;AAACL,UAAAA,KAAK,CAACM,MAAN;AAAeF,UAAAA,qBAAqB,CAACC,IAAD,CAArB;AAA4B,SAA5D,CAArB;AAAoF,OAAxK;;AAAyKT,MAAAA,MAAM,CAACW,GAAP,GAAW,gDAAX;AAA4DV,MAAAA,QAAQ,CAACW,IAAT,CAAcN,WAAd,CAA0BN,MAA1B;AAAmC,KAAhU,IAHe,CAMd;;;AACA,QAAIa,KAAK,GAAG;AACXC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UADH;AAEXC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAFJ,KAAZ;AAKA,UAAMC,aAAa,GAAG,KAAtB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,KAAK,GAAG,MAAZ,CAdc,CAgBd;;AACA,UAAMC,KAAK,GAAG,IAAI1B,KAAK,CAAC2B,KAAV,EAAd,CAjBc,CAmBd;;AACA,QAAIC,SAAS,GAAG,IAAIC,YAAJ,CAAiBN,aAAa,GAAC,CAA/B,CAAhB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,aAArB,EAAoCS,CAAC,EAArC,EAAyC;AACxCJ,MAAAA,SAAS,CAACI,CAAD,CAAT,GAAeC,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,IAAtC;AACA;;AAED,UAAMC,QAAQ,GAAG,IAAInC,KAAK,CAACoC,cAAV,EAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsB,UAAtB,EAAkC,IAAIrC,KAAK,CAACsC,eAAV,CAA0BV,SAA1B,EAAoC,CAApC,CAAlC,EA5Bc,CA8Bd;;AACA,UAAMW,OAAO,GAAG,IAAIvC,KAAK,CAACwC,aAAV,GAA0BC,IAA1B,CAA+BxC,QAA/B,CAAhB;AACA,QAAIyC,QAAQ,GAAG,IAAI1C,KAAK,CAAC2C,cAAV,CAA0B;AACxCC,MAAAA,IAAI,EAACpB,SADmC;AAExCqB,MAAAA,SAAS,EAAC,KAF8B;AAEvB;AACjBC,MAAAA,WAAW,EAAC,IAH4B;AAGtB;AAClBC,MAAAA,GAAG,EAAE,KAJmC;AAKxCC,MAAAA,GAAG,EAAET;AALmC,KAA1B,CAAf,CAhCc,CAwCd;;AACA,UAAMU,IAAI,GAAG,IAAIjD,KAAK,CAACkD,MAAV,CAAkBf,QAAlB,EAA4BO,QAA5B,CAAb;AACAO,IAAAA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AACA1B,IAAAA,KAAK,CAAC2B,GAAN,CAAUJ,IAAV,EA3Cc,CA6Cd;;AACA,UAAMK,UAAU,GAAG,IAAItD,KAAK,CAACuD,UAAV,CAAqB,QAArB,EAA+B,GAA/B,CAAnB;AACAD,IAAAA,UAAU,CAACE,QAAX,CAAoBC,CAApB,GAAwB,CAAxB;AACAH,IAAAA,UAAU,CAACE,QAAX,CAAoBE,CAApB,GAAwB,CAAxB;AACAJ,IAAAA,UAAU,CAACE,QAAX,CAAoBG,CAApB,GAAwB,IAAxB;AACAjC,IAAAA,KAAK,CAAC2B,GAAN,CAAUC,UAAV,EAlDc,CAoDd;;AACM,UAAMM,WAAW,GAAG,EAApB;AACA,UAAMC,WAAW,GAAG5C,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACI,MAAxC;AACA,UAAMyC,SAAS,GAAG,CAAlB;AACN,UAAMC,QAAQ,GAAG,IAAjB;AAEA,UAAMC,MAAM,GAAG,IAAIhE,KAAK,CAACiE,iBAAV,CAA4BL,WAA5B,EAAyCC,WAAzC,EAAsDC,SAAtD,EAAiEC,QAAjE,CAAf;AACAC,IAAAA,MAAM,CAACR,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AACAO,IAAAA,MAAM,CAACR,QAAP,CAAgBE,CAAhB,GAAoB,CAApB;AACAM,IAAAA,MAAM,CAACR,QAAP,CAAgBG,CAAhB,GAAoBI,QAAQ,GAAC,CAA7B;AACArC,IAAAA,KAAK,CAAC2B,GAAN,CAAUW,MAAV,EA9Dc,CAgEd;;AACA,UAAME,aAAa,GAAGC,OAAO,CAAC,sBAAD,CAAP,CAAgCnE,KAAhC,CAAtB;;AACM,UAAMoE,QAAQ,GAAG,IAAIF,aAAJ,CAAkBF,MAAlB,CAAjB,CAlEQ,CAoEd;;AACA,QAAIK,SAAS,GAAGhE,QAAQ,CAACiE,cAAT,CAAwB,cAAxB,CAAhB;AACAD,IAAAA,SAAS,CAACE,KAAV,CAAgBrD,KAAhB,GAAwB,MAAxB;AACAmD,IAAAA,SAAS,CAACE,KAAV,CAAgBlD,MAAhB,GAAyB,OAAzB;AACAgD,IAAAA,SAAS,CAACE,KAAV,CAAgBC,QAAhB,GAA2B,QAA3B,CAxEc,CA0Ed;;AACA,UAAMC,QAAQ,GAAG,IAAIzE,KAAK,CAAC0E,aAAV,EAAjB;AACAD,IAAAA,QAAQ,CAACE,aAAT,CAAuBxD,MAAM,CAACyD,gBAA9B;AACAH,IAAAA,QAAQ,CAACI,OAAT,CAAiB5D,KAAK,CAACC,KAAvB,EAA8BD,KAAK,CAACI,MAApC;AACAgD,IAAAA,SAAS,CAAC3D,WAAV,CAAsB+D,QAAQ,CAACK,UAA/B;AAEA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,MAAM,GAAG,CAAb;;AACA,aAASC,MAAT,GAAkB;AAEjB,UAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,KAAW3D,KAAtB,CAFiB,CAKjB;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,aAArB,EAAoCS,CAAC,IAAE,CAAvC,EAA0C;AAC1CJ,QAAAA,SAAS,CAACI,CAAD,CAAT,GAAe,MAAIC,IAAI,CAACoD,GAAL,CAASrD,CAAC,GAAC,KAAF,GAAQkD,IAAjB,CAAnB,CAD0C,CAE1C;AACG;AACF,OAVgB,CAYjB;;;AACA,WAAK,IAAIlD,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,aAArB,EAAoCS,CAAC,IAAE,CAAvC,EAA0C;AAC1CJ,QAAAA,SAAS,CAACI,CAAD,CAAT,GAAe,MAAIC,IAAI,CAACqD,GAAL,CAAStD,CAAC,GAAC,KAAF,GAAQkD,IAAjB,CAAnB,CAD0C,CAE1C;AACC,OAhBgB,CAkBjB;;;AACA,WAAK,IAAIlD,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,aAArB,EAAoCS,CAAC,IAAE,CAAvC,EAA0C;AAC1CJ,QAAAA,SAAS,CAACI,CAAD,CAAT,GAAe,MAAIC,IAAI,CAACoD,GAAL,CAASrD,CAAC,GAAC,KAAF,GAAQkD,IAAjB,CAAnB,CAD0C,CAE1C;AACC,OAtBgB,CAwBjB;;;AACA/C,MAAAA,QAAQ,CAACE,YAAT,CAAsB,UAAtB,EAAkC,IAAIrC,KAAK,CAACsC,eAAV,CAA0BV,SAA1B,EAAoC,CAApC,CAAlC;AAGA6C,MAAAA,QAAQ,CAACQ,MAAT,CAAgBvD,KAAhB,EAAuBsC,MAAvB;AACA;;AAED,aAASuB,OAAT,GAAmB;AAClB3E,MAAAA,qBAAqB,CAAC2E,OAAD,CAArB;AACAN,MAAAA,MAAM;AACN;;AACDM,IAAAA,OAAO,GArHO,CAuHd;;AACApE,IAAAA,MAAM,CAACqE,gBAAP,CAAwB,QAAxB,EAAkCC,cAAlC,EAAkD,KAAlD;AACApF,IAAAA,QAAQ,CAACmF,gBAAT,CAA0B,WAA1B,EAAuCE,mBAAvC,EAA4D,KAA5D;AACArF,IAAAA,QAAQ,CAACmF,gBAAT,CAA0B,YAA1B,EAAwCG,oBAAxC,EAA8D,KAA9D;AACAtF,IAAAA,QAAQ,CAACmF,gBAAT,CAA0B,WAA1B,EAAuCI,mBAAvC,EAA4D,KAA5D;AAEA,QAAIC,WAAW,GAAG5E,KAAK,CAACC,KAAN,GAAc,CAAhC;AACA,QAAI4E,WAAW,GAAG7E,KAAK,CAACI,MAAN,GAAe,CAAjC;;AACA,aAASqE,mBAAT,CAA6BK,CAA7B,EAAgC;AAC/BhB,MAAAA,MAAM,GAAGgB,CAAC,CAACC,OAAF,GAAYH,WAArB;AACAb,MAAAA,MAAM,GAAGe,CAAC,CAACE,OAAF,GAAYH,WAArB;AACA;;AAED,aAASH,oBAAT,CAA8BI,CAA9B,EAAiC;AAChC,UAAIA,CAAC,CAACG,OAAF,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC3BJ,QAAAA,CAAC,CAACK,cAAF;AACArB,QAAAA,MAAM,GAAGgB,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaG,KAAb,GAAqBR,WAA9B;AACAb,QAAAA,MAAM,GAAGe,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaI,KAAb,GAAqBR,WAA9B;AACA;AACD;;AAED,aAASF,mBAAT,CAA6BG,CAA7B,EAAgC;AAC/B,UAAIA,CAAC,CAACG,OAAF,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC3BJ,QAAAA,CAAC,CAACK,cAAF;AACArB,QAAAA,MAAM,GAAGgB,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaG,KAAb,GAAqBR,WAA9B;AACAb,QAAAA,MAAM,GAAGe,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaI,KAAb,GAAqBR,WAA9B;AACA;AACD;;AAED,aAASL,cAAT,GAA0B;AACzBI,MAAAA,WAAW,GAAG1E,MAAM,CAACC,UAAP,GAAoB,CAAlC;AACA0E,MAAAA,WAAW,GAAG3E,MAAM,CAACG,WAAP,GAAqB,CAAnC;AAEA0C,MAAAA,MAAM,CAACuC,MAAP,GAAgBpF,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACG,WAA3C;AACA0C,MAAAA,MAAM,CAACwC,sBAAP;AACA/B,MAAAA,QAAQ,CAACI,OAAT,CAAiB1D,MAAM,CAACC,UAAxB,EAAoCD,MAAM,CAACG,WAA3C;AACA;AAEI,GA7JE,EA6JD,EA7JC,CAAT;AA+JA,SACG,IADH;AAIC;;GArKuBnB,O;;KAAAA,O","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport texture1 from './circle.png'\nimport Stats from './Stats.js'\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\n\t//GET PERFORMACE STATS, COMMENT TO HIDE\n\t(function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src='//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);})()\n\n\t\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\n\t\tconst particleCount = 20000;\n\t\tlet pointSize = 10;\n\t\tlet speed = 0.0001;\n\t\t  \n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\t\t\n\t\t// CREATE GEOMETRY FROM CUSTOM POINTS\n\t\tlet particles = new Float32Array(particleCount*3);\n\t\tconsole.log(particles)\n\n\t\tfor (let i = 1; i <= particleCount; i++) {\n\t\t\tparticles[i] = Math.random() * 2000 - 1000;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles,3));\n\n\t\t// MATERIAL WITH IMPORTED TEXTURE\n\t\tconst texture = new THREE.TextureLoader().load(texture1);\n\t\tlet material = new THREE.PointsMaterial( {\n\t\t\tsize:pointSize,\n\t\t\tdepthTest:false, //for transparent png\n\t\t\ttransparent:true, //for transparent png\n\t\t\tfog: false,\n\t\t\tmap: texture\n\t\t} );\n\n\t\t// MESH\n\t\tconst mesh = new THREE.Points( geometry, material );\n\t\tmesh.scale.set( 1, 1, 1 );\n\t\tscene.add(mesh);\n\n\t\t// LIGHTS\n\t\tconst pointLight = new THREE.PointLight(0xffffff, 0.1)\n\t\tpointLight.position.x = 2\n\t\tpointLight.position.y = 3\n\t\tpointLight.position.z = 1000\n\t\tscene.add(pointLight)\n\n\t\t// CAMERA\n        const fieldOfView = 75;\n        const aspectRatio = sizes.width / sizes.height;\n        const nearPlane = 1;\n\t\tconst farPlane = 3000;\n\n\t\tconst camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\tcamera.position.x = 0;\n\t\tcamera.position.y = 0;\n\t\tcamera.position.z = farPlane/3;\n\t\tscene.add(camera)\n\n\t\t// ADD CAMERA CONTROLS\n\t\tconst OrbitControls = require('three-orbit-controls')(THREE)\n        const controls = new OrbitControls(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer(); \n\t\trenderer.setPixelRatio(window.devicePixelRatio); \t\n\t\trenderer.setSize(sizes.width, sizes.height); \n\t\tcontainer.appendChild(renderer.domElement); \n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\t\tfunction render() {\n\n\t\t\tlet time = Date.now()*speed;\n\n\t\t\t\n\t\t\t//ANIMATE PARTICLE X\n\t\t\tfor (let i = 1; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 300*Math.sin(i*0.003+time);\n\t\t\t//particles[i] = Math.sin(0.2*i+time*0.1)*300;\n\t\t    //material.size = 3+Math.abs(Math.sin(0.00001*i+time*0.1)*20);\t\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Y\n\t\t\tfor (let i = 2; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 300*Math.cos(i*0.001+time);\n\t\t\t//particles[i] = Math.cos(0.002*i+time*0.1)*600;\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Z\n\t\t\tfor (let i = 3; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 300*Math.sin(i*0.009+time);\n\t\t\t//particles[i] = Math.sin(0.002*i+time*0.1)*600;\n\t\t\t}\n\n\t\t\t//UPDATE GEOMETRY POSITION\n\t\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles,3));\n\t\t\t\n            \n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onWindowResize() {\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}