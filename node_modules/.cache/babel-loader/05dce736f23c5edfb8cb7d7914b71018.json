{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport * as THREE from 'three';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    var scene, camera, renderer; // I guess we need this stuff too\n\n    var container,\n        HEIGHT,\n        WIDTH,\n        fieldOfView,\n        aspectRatio,\n        nearPlane,\n        farPlane,\n        stats,\n        geometry,\n        particleCount,\n        i,\n        h,\n        color,\n        size,\n        materials = [],\n        mouseX = 0,\n        mouseY = 0,\n        windowHalfX,\n        windowHalfY,\n        cameraZ,\n        fogHex,\n        fogDensity,\n        parameters = {},\n        parameterCount,\n        particles;\n    init();\n    animate();\n\n    function init() {\n      HEIGHT = window.innerHeight;\n      WIDTH = window.innerWidth;\n      windowHalfX = WIDTH / 2;\n      windowHalfY = HEIGHT / 2;\n      fieldOfView = 75;\n      aspectRatio = WIDTH / HEIGHT;\n      nearPlane = 1;\n      farPlane = 3000;\n      /* \tfieldOfView — Camera frustum vertical field of view.\n      aspectRatio — Camera frustum aspect ratio.\n      nearPlane — Camera frustum near plane.\n      farPlane — Camera frustum far plane.\n      - https://threejs.org/docs/#Reference/Cameras/PerspectiveCamera\n      In geometry, a frustum (plural: frusta or frustums)\n      is the portion of a solid (normally a cone or pyramid)\n      that lies between two parallel planes cutting it. - wikipedia.\t\t*/\n\n      cameraZ = farPlane / 3;\n      /*\tSo, 1000? Yes! move on!\t*/\n\n      fogHex = 0x000000;\n      /* As black as your heart.\t*/\n\n      fogDensity = 0.0007;\n      /* So not terribly dense?\t*/\n\n      camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n      camera.position.z = cameraZ;\n      scene = new THREE.Scene();\n      scene.fog = new THREE.FogExp2(fogHex, fogDensity);\n      container = document.createElement('div');\n      document.body.appendChild(container);\n      document.body.style.margin = 0;\n      document.body.style.overflow = 'hidden';\n      geometry = new THREE.Geometry();\n      /*\tNO ONE SAID ANYTHING ABOUT MATH! UGH!\t*/\n\n      particleCount = 20000;\n      /* Leagues under the sea */\n\n      /*\tHope you took your motion sickness pills;\n      We're about to get loopy.\t*/\n\n      for (i = 0; i < particleCount; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = Math.random() * 2000 - 1000;\n        vertex.y = Math.random() * 2000 - 1000;\n        vertex.z = Math.random() * 2000 - 1000;\n        geometry.vertices.push(vertex);\n      }\n      /*\tWe can't stop here, this is bat country!\t*/\n\n\n      parameters = [[[1, 1, 0.5], 5], [[0.95, 1, 0.5], 4], [[0.90, 1, 0.5], 3], [[0.85, 1, 0.5], 2], [[0.80, 1, 0.5], 1]];\n      parameterCount = parameters.length;\n      /*\tI told you to take those motion sickness pills.\n      Clean that vommit up, we're going again!\t*/\n\n      for (i = 0; i < parameterCount; i++) {\n        color = parameters[i][0];\n        size = parameters[i][1];\n        materials[i] = new THREE.PointCloudMaterial({\n          size: size\n        });\n        particles = new THREE.PointCloud(geometry, materials[i]);\n        particles.rotation.x = Math.random() * 6;\n        particles.rotation.y = Math.random() * 6;\n        particles.rotation.z = Math.random() * 6;\n        scene.add(particles);\n      }\n      /*\tIf my calculations are correct, when this baby hits 88 miles per hour...\n      you're gonna see some serious shit.\t*/\n\n\n      renderer = new THREE.WebGLRenderer();\n      /*\tRendererererers particles.\t*/\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n      /*\tProbably 1; unless you're fancy.\t*/\n\n      renderer.setSize(WIDTH, HEIGHT);\n      /*\tFull screen baby Wooooo!\t*/\n\n      container.appendChild(renderer.domElement);\n      /* Let's add all this crazy junk to the page.\t*/\n\n      /*\tI don't know about you, but I like to know how bad my\n      code is wrecking the performance of a user's machine.\n      Let's see some damn stats!\t*/\n\n      stats = new Stats();\n      stats.domElement.style.position = 'absolute';\n      stats.domElement.style.top = '0px';\n      stats.domElement.style.right = '0px';\n      container.appendChild(stats.domElement);\n      /* Event Listeners */\n\n      window.addEventListener('resize', onWindowResize, false);\n      document.addEventListener('mousemove', onDocumentMouseMove, false);\n      document.addEventListener('touchstart', onDocumentTouchStart, false);\n      document.addEventListener('touchmove', onDocumentTouchMove, false);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    }\n\n    function render() {\n      var time = Date.now() * 0.00005;\n      camera.position.x += (mouseX - camera.position.x) * 0.05;\n      camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n\n      for (i = 0; i < scene.children.length; i++) {\n        var object = scene.children[i];\n\n        if (object instanceof THREE.PointCloud) {\n          object.rotation.y = time * (i < 4 ? i + 1 : -(i + 1));\n        }\n      }\n\n      for (i = 0; i < materials.length; i++) {\n        color = parameters[i][0];\n        h = 360 * (color[0] + time) % 360 / 360;\n        materials[i].color.setHSL(h, color[1], color[2]);\n      }\n\n      renderer.render(scene, camera);\n    }\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    }\n    /*\tMobile users?  I got your back homey\t*/\n\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-2 - cópia/src/components/Threejs.js"],"names":["React","useEffect","THREE","Threejs","scene","camera","renderer","container","HEIGHT","WIDTH","fieldOfView","aspectRatio","nearPlane","farPlane","stats","geometry","particleCount","i","h","color","size","materials","mouseX","mouseY","windowHalfX","windowHalfY","cameraZ","fogHex","fogDensity","parameters","parameterCount","particles","init","animate","window","innerHeight","innerWidth","PerspectiveCamera","position","z","Scene","fog","FogExp2","document","createElement","body","appendChild","style","margin","overflow","Geometry","vertex","Vector3","x","Math","random","y","vertices","push","length","PointCloudMaterial","PointCloud","rotation","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","Stats","top","right","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","requestAnimationFrame","render","update","time","Date","now","lookAt","children","object","setHSL","e","clientX","clientY","touches","preventDefault","pageX","pageY","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {React, useEffect} from 'react'\nimport * as THREE from 'three';\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\tvar scene, camera, renderer;\n\n    // I guess we need this stuff too\n    var container, HEIGHT,\n        WIDTH, fieldOfView, aspectRatio,\n        nearPlane, farPlane, stats,\n        geometry, particleCount,\n        i, h, color, size,\n        materials = [],\n        mouseX = 0,\n        mouseY = 0,\n        windowHalfX, windowHalfY, cameraZ,\n        fogHex, fogDensity, parameters = {},\n        parameterCount, particles;\n\n    init();\n    animate();\n\n    function init() {\n\n        HEIGHT = window.innerHeight;\n        WIDTH = window.innerWidth;\n        windowHalfX = WIDTH / 2;\n        windowHalfY = HEIGHT / 2;\n\n        fieldOfView = 75;\n        aspectRatio = WIDTH / HEIGHT;\n        nearPlane = 1;\n        farPlane = 3000;\n\n        /* \tfieldOfView — Camera frustum vertical field of view.\n\taspectRatio — Camera frustum aspect ratio.\n\tnearPlane — Camera frustum near plane.\n\tfarPlane — Camera frustum far plane.\n\n\t- https://threejs.org/docs/#Reference/Cameras/PerspectiveCamera\n\n\tIn geometry, a frustum (plural: frusta or frustums)\n\tis the portion of a solid (normally a cone or pyramid)\n\tthat lies between two parallel planes cutting it. - wikipedia.\t\t*/\n\n        cameraZ = farPlane / 3; /*\tSo, 1000? Yes! move on!\t*/\n        fogHex = 0x000000; /* As black as your heart.\t*/\n        fogDensity = 0.0007; /* So not terribly dense?\t*/\n\n        camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n        camera.position.z = cameraZ;\n\n        scene = new THREE.Scene();\n        scene.fog = new THREE.FogExp2(fogHex, fogDensity);\n\n        container = document.createElement('div');\n        document.body.appendChild(container);\n        document.body.style.margin = 0;\n        document.body.style.overflow = 'hidden';\n\n        geometry = new THREE.Geometry(); /*\tNO ONE SAID ANYTHING ABOUT MATH! UGH!\t*/\n\n        particleCount = 20000; /* Leagues under the sea */\n\n        /*\tHope you took your motion sickness pills;\n\tWe're about to get loopy.\t*/\n\n        for (i = 0; i < particleCount; i++) {\n\n            var vertex = new THREE.Vector3();\n            vertex.x = Math.random() * 2000 - 1000;\n            vertex.y = Math.random() * 2000 - 1000;\n            vertex.z = Math.random() * 2000 - 1000;\n\n            geometry.vertices.push(vertex);\n        }\n\n        /*\tWe can't stop here, this is bat country!\t*/\n\n        parameters = [\n            [\n                [1, 1, 0.5], 5\n            ],\n            [\n                [0.95, 1, 0.5], 4\n            ],\n            [\n                [0.90, 1, 0.5], 3\n            ],\n            [\n                [0.85, 1, 0.5], 2\n            ],\n            [\n                [0.80, 1, 0.5], 1\n            ]\n        ];\n        parameterCount = parameters.length;\n\n        /*\tI told you to take those motion sickness pills.\n\tClean that vommit up, we're going again!\t*/\n\n        for (i = 0; i < parameterCount; i++) {\n\n            color = parameters[i][0];\n            size = parameters[i][1];\n\n            materials[i] = new THREE.PointCloudMaterial({\n                size: size\n            });\n\n            particles = new THREE.PointCloud(geometry, materials[i]);\n\n            particles.rotation.x = Math.random() * 6;\n            particles.rotation.y = Math.random() * 6;\n            particles.rotation.z = Math.random() * 6;\n\n            scene.add(particles);\n        }\n\n        /*\tIf my calculations are correct, when this baby hits 88 miles per hour...\n\tyou're gonna see some serious shit.\t*/\n\n        renderer = new THREE.WebGLRenderer(); /*\tRendererererers particles.\t*/\n        renderer.setPixelRatio(window.devicePixelRatio); /*\tProbably 1; unless you're fancy.\t*/\n        renderer.setSize(WIDTH, HEIGHT); /*\tFull screen baby Wooooo!\t*/\n\n        container.appendChild(renderer.domElement); /* Let's add all this crazy junk to the page.\t*/\n\n        /*\tI don't know about you, but I like to know how bad my\n\t\tcode is wrecking the performance of a user's machine.\n\t\tLet's see some damn stats!\t*/\n\n        stats = new Stats();\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.top = '0px';\n        stats.domElement.style.right = '0px';\n        container.appendChild(stats.domElement);\n\n        /* Event Listeners */\n\n        window.addEventListener('resize', onWindowResize, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('touchstart', onDocumentTouchStart, false);\n        document.addEventListener('touchmove', onDocumentTouchMove, false);\n\n    }\n\n    function animate() {\n        requestAnimationFrame(animate);\n        render();\n        stats.update();\n    }\n\n    function render() {\n        var time = Date.now() * 0.00005;\n\n        camera.position.x += (mouseX - camera.position.x) * 0.05;\n        camera.position.y += (-mouseY - camera.position.y) * 0.05;\n\n        camera.lookAt(scene.position);\n\n        for (i = 0; i < scene.children.length; i++) {\n\n            var object = scene.children[i];\n\n            if (object instanceof THREE.PointCloud) {\n\n                object.rotation.y = time * (i < 4 ? i + 1 : -(i + 1));\n            }\n        }\n\n        for (i = 0; i < materials.length; i++) {\n\n            color = parameters[i][0];\n\n            h = (360 * (color[0] + time) % 360) / 360;\n            materials[i].color.setHSL(h, color[1], color[2]);\n        }\n\n        renderer.render(scene, camera);\n    }\n\n    function onDocumentMouseMove(e) {\n        mouseX = e.clientX - windowHalfX;\n        mouseY = e.clientY - windowHalfY;\n    }\n\n    /*\tMobile users?  I got your back homey\t*/\n\n    function onDocumentTouchStart(e) {\n\n        if (e.touches.length === 1) {\n\n            e.preventDefault();\n            mouseX = e.touches[0].pageX - windowHalfX;\n            mouseY = e.touches[0].pageY - windowHalfY;\n        }\n    }\n\n    function onDocumentTouchMove(e) {\n\n        if (e.touches.length === 1) {\n\n            e.preventDefault();\n            mouseX = e.touches[0].pageX - windowHalfX;\n            mouseY = e.touches[0].pageY - windowHalfY;\n        }\n    }\n\n    function onWindowResize() {\n\n        windowHalfX = window.innerWidth / 2;\n        windowHalfY = window.innerHeight / 2;\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}