{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport texture1 from './circle.png';\nimport Stats from './Stats.js';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    //GET PERFORMACE STATS, COMMENT TO HIDE\n    (function () {\n      var script = document.createElement('script');\n\n      script.onload = function () {\n        var stats = new Stats();\n        document.body.appendChild(stats.dom);\n        requestAnimationFrame(function loop() {\n          stats.update();\n          requestAnimationFrame(loop);\n        });\n      };\n\n      script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\n      document.head.appendChild(script);\n    })(); // Global Variables\n\n\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    const particleCount = 20000;\n    let pointSize = 20;\n    let speed = 0.0001; // CREATE SCENE\n\n    const scene = new THREE.Scene(); // CREATE GEOMETRY FROM CUSTOM POINTS\n\n    let particles = new Float32Array(particleCount);\n    console.log(particles);\n\n    for (let i = 0; i <= particleCount; i++) {\n      particles[i] = Math.random() * 2000 - 1000;\n    }\n\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3)); // MATERIAL WITH IMPORTED TEXTURE\n\n    const texture = new THREE.TextureLoader().load(texture1);\n    let material = new THREE.LineBasicMaterial({\n      size: pointSize,\n      depthTest: false,\n      //for transparent png\n      transparent: true,\n      //for transparent png\n      fog: false,\n      map: texture\n    }); // MESH\n\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.scale.set(1, 1, 1);\n    scene.add(mesh); //lights\n\n    let light1, light2, light3, light4;\n    const sphere = new THREE.SphereGeometry(0.5, 16, 8);\n    light1 = new THREE.PointLight(0xff0040, 2, 50);\n    light1.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: 0xff0040\n    })));\n    scene.add(light1);\n    light2 = new THREE.PointLight(0x0040ff, 2, 50);\n    light2.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: 0x0040ff\n    })));\n    scene.add(light2);\n    light3 = new THREE.PointLight(0x80ff80, 2, 50);\n    light3.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: 0x80ff80\n    })));\n    scene.add(light3);\n    light4 = new THREE.PointLight(0xffaa00, 2, 50);\n    light4.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: 0xffaa00\n    })));\n    scene.add(light4); // CAMERA\n\n    const fieldOfView = 75;\n    const aspectRatio = sizes.width / sizes.height;\n    const nearPlane = 1;\n    const farPlane = 3000;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = farPlane / 3;\n    scene.add(camera); // ADD CAMERA CONTROLS\n\n    const OrbitControls = require('three-orbit-controls')(THREE);\n\n    const controls = new OrbitControls(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(sizes.width, sizes.height);\n    container.appendChild(renderer.domElement);\n    let mouseX = 0;\n    let mouseY = 0;\n\n    function render() {\n      let time = Date.now() * speed; //ANIMATE PARTICLE X\n\n      for (let i = 0; i <= particleCount; i += 3) {\n        particles[i] = 300 * Math.sin(i * 0.003) + 100 * Math.sin(i * 0.2 + time * 10);\n        ; //particles[i] = 300*Math.sin(i*0.003)+100*Math.sin(i*0.002+time*5);\n        //particles[i] = 300*Math.sin(i*0.004)+100*Math.sin(i*0.002+time*5);\n        //material.size = 3+Math.abs(Math.sin(0.00001*i+time*0.1)*20);\t\n      } //ANIMATE PARTICLE Y\n\n\n      for (let i = 1; i <= particleCount; i += 3) {\n        particles[i] = 300 * Math.cos(i * 0.003) + 100 * Math.cos(i * 0.2 + time * 10);\n        ; //particles[i] = 300*Math.cos(i*0.003)+100*Math.cos(i*0.002+time*10);;\n        //particles[i] = 300*Math.cos(i*0.003)+100*Math.cos(i*0.001+time*10);;\n      } //ANIMATE PARTICLE Z\n\n\n      for (let i = 2; i <= particleCount; i += 3) {\n        particles[i] = 200 * Math.sin(i * mouseX / 1000 + time);\n      } //UPDATE GEOMETRY POSITION\n\n\n      geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3));\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    let windowHalfX = sizes.width / 2;\n    let windowHalfY = sizes.height / 2;\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    }\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-buffer-geometry4/src/components/Threejs.js"],"names":["useEffect","THREE","texture1","Stats","Threejs","script","document","createElement","onload","stats","body","appendChild","dom","requestAnimationFrame","loop","update","src","head","sizes","width","window","innerWidth","height","innerHeight","particleCount","pointSize","speed","scene","Scene","particles","Float32Array","console","log","i","Math","random","geometry","BufferGeometry","setAttribute","BufferAttribute","texture","TextureLoader","load","material","LineBasicMaterial","size","depthTest","transparent","fog","map","mesh","Mesh","scale","set","add","light1","light2","light3","light4","sphere","SphereGeometry","PointLight","MeshBasicMaterial","color","fieldOfView","aspectRatio","nearPlane","farPlane","camera","PerspectiveCamera","position","x","y","z","OrbitControls","require","controls","container","getElementById","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","mouseX","mouseY","render","time","Date","now","sin","cos","animate","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","windowHalfX","windowHalfY","e","clientX","clientY","touches","length","preventDefault","pageX","pageY","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport texture1 from './circle.png'\nimport Stats from './Stats.js'\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\n\t//GET PERFORMACE STATS, COMMENT TO HIDE\n\t(function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src='//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);})()\n\n\t\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\n\t\tconst particleCount = 20000;\n\t\tlet pointSize = 20;\n\t\tlet speed = 0.0001;\n\t\t  \n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\t\t\n\t\t// CREATE GEOMETRY FROM CUSTOM POINTS\n\t\tlet particles = new Float32Array(particleCount);\n\t\tconsole.log((particles))\n\t\tfor (let i = 0; i <= particleCount; i++) {\n\t\t\tparticles[i] = Math.random() * 2000 - 1000;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles,3));\n\n\t\t// MATERIAL WITH IMPORTED TEXTURE\n\t\tconst texture = new THREE.TextureLoader().load(texture1);\n\t\tlet material = new THREE.LineBasicMaterial( {\n\t\t\tsize:pointSize,\n\t\t\tdepthTest:false, //for transparent png\n\t\t\ttransparent:true, //for transparent png\n\t\t\tfog: false,\n\t\t\tmap: texture\n\t\t} );\n\n\t\t// MESH\n\t\tconst mesh = new THREE.Mesh( geometry, material );\n\t\tmesh.scale.set( 1, 1, 1 );\n\t\tscene.add(mesh);\n\n\t\t\t//lights\n\t\t\tlet light1, light2, light3, light4;\n\t\t\tconst sphere = new THREE.SphereGeometry( 0.5, 16, 8 );\n\t\t\tlight1 = new THREE.PointLight( 0xff0040, 2, 50 );\n\t\t\tlight1.add( new THREE.Mesh( sphere, new THREE.MeshBasicMaterial( { color: 0xff0040 } ) ) );\n\t\t\tscene.add( light1 );\n\n\t\t\tlight2 = new THREE.PointLight( 0x0040ff, 2, 50 );\n\t\t\tlight2.add( new THREE.Mesh( sphere, new THREE.MeshBasicMaterial( { color: 0x0040ff } ) ) );\n\t\t\tscene.add( light2 );\n\n\t\t\tlight3 = new THREE.PointLight( 0x80ff80, 2, 50 );\n\t\t\tlight3.add( new THREE.Mesh( sphere, new THREE.MeshBasicMaterial( { color: 0x80ff80 } ) ) );\n\t\t\tscene.add( light3 );\n\n\t\t\tlight4 = new THREE.PointLight( 0xffaa00, 2, 50 );\n\t\t\tlight4.add( new THREE.Mesh( sphere, new THREE.MeshBasicMaterial( { color: 0xffaa00 } ) ) );\n\t\t\tscene.add( light4 );\n\n\t\t// CAMERA\n        const fieldOfView = 75;\n        const aspectRatio = sizes.width / sizes.height;\n        const nearPlane = 1;\n\t\tconst farPlane = 3000;\n\n\t\tconst camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\tcamera.position.x = 0;\n\t\tcamera.position.y = 0;\n\t\tcamera.position.z = farPlane/3;\n\t\tscene.add(camera)\n\n\t\t// ADD CAMERA CONTROLS\n\t\tconst OrbitControls = require('three-orbit-controls')(THREE)\n        const controls = new OrbitControls(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer(); \n\t\trenderer.setPixelRatio(window.devicePixelRatio); \t\n\t\trenderer.setSize(sizes.width, sizes.height); \n\t\tcontainer.appendChild(renderer.domElement); \n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\t\tfunction render() {\n\n\t\t\tlet time = Date.now()*speed;\n\n\t\t\t//ANIMATE PARTICLE X\n\t\t\tfor (let i = 0; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 300*Math.sin(i*0.003)+100*Math.sin(i*0.2+time*10);;\n\t\t\t//particles[i] = 300*Math.sin(i*0.003)+100*Math.sin(i*0.002+time*5);\n\t\t\t//particles[i] = 300*Math.sin(i*0.004)+100*Math.sin(i*0.002+time*5);\n\t\t    //material.size = 3+Math.abs(Math.sin(0.00001*i+time*0.1)*20);\t\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Y\n\t\t\tfor (let i = 1; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 300*Math.cos(i*0.003)+100*Math.cos(i*0.2+time*10);;\n\t\t\t//particles[i] = 300*Math.cos(i*0.003)+100*Math.cos(i*0.002+time*10);;\n\t\t\t//particles[i] = 300*Math.cos(i*0.003)+100*Math.cos(i*0.001+time*10);;\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Z\n\t\t\tfor (let i = 2; i <= particleCount; i+=3) {\n\t\t\tparticles[i] = 200*Math.sin(i*mouseX/1000+time);\n\t\t\t}\n\n\t\t\t//UPDATE GEOMETRY POSITION\n\t\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles,3));\n\t\t\t\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onWindowResize() {\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}