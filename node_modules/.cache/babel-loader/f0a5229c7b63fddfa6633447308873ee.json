{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport * as THREE from 'three';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    var scene, camera, renderer; // I guess we need this stuff too\n\n    var container,\n        HEIGHT,\n        WIDTH,\n        fieldOfView,\n        aspectRatio,\n        nearPlane,\n        farPlane,\n        geometry,\n        mesh,\n        particleCount,\n        i,\n        materials = [],\n        mouseX = 0,\n        mouseY = 0,\n        windowHalfX,\n        windowHalfY,\n        cameraZ,\n        fogHex,\n        fogDensity,\n        parameterCount,\n        particles,\n        material;\n    init();\n    animate();\n\n    function init() {\n      HEIGHT = window.innerHeight;\n      WIDTH = window.innerWidth;\n      windowHalfX = WIDTH / 2;\n      windowHalfY = HEIGHT / 2;\n      fieldOfView = 75;\n      aspectRatio = WIDTH / HEIGHT;\n      nearPlane = 1;\n      farPlane = 3000;\n      /* \tfieldOfView — Camera frustum vertical field of view.\n      aspectRatio — Camera frustum aspect ratio.\n      nearPlane — Camera frustum near plane.\n      farPlane — Camera frustum far plane.\n      \t- https://threejs.org/docs/#Reference/Cameras/PerspectiveCamera\n      \tIn geometry, a frustum (plural: frusta or frustums)\n      is the portion of a solid (normally a cone or pyramid)\n      that lies between two parallel planes cutting it. - wikipedia.\t\t*/\n\n      cameraZ = farPlane / 3;\n      /*\tSo, 1000? Yes! move on!\t*/\n\n      camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n      camera.position.z = cameraZ;\n      scene = new THREE.Scene();\n      scene.fog = new THREE.FogExp2(fogHex, fogDensity);\n      container = document.createElement('div');\n      document.body.appendChild(container);\n      document.body.style.margin = 0;\n      document.body.style.overflow = 'hidden';\n      const points = [];\n      particleCount = 20000;\n      /* Leagues under the sea */\n\n      /*\tHope you took your motion sickness pills;\n      We're about to get loopy.\t*/\n\n      for (i = 0; i < particleCount; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = Math.random() * 2000 - 1000;\n        vertex.y = Math.random() * 2000 - 1000;\n        vertex.z = Math.random() * 2000 - 1000;\n        points.push(vertex);\n      }\n\n      geometry = new THREE.BufferGeometry().setFromPoints(points);\n      const geometry2 = new THREE.SphereGeometry(500, 32, 32);\n      const sizes = [];\n      let uniforms = {\n        u_size: {\n          value: 10.0\n        }\n      };\n      material = new THREE.PointsMaterial({\n        size: 35,\n        sizeAttenuation: true,\n        alphaTest: 0.5,\n        transparent: true\n      });\n      const shaderMaterial = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: document.getElementById('vertexshader').textContent,\n        fragmentShader: document.getElementById('fragmentshader').textContent\n      });\n      /*\tI told you to take those motion sickness pills.\n      Clean that vommit up, we're going again!\t*/\n\n      for (i = 0; i < parameterCount; i++) {\n        particles = new THREE.PointCloud(geometry, materials[i]);\n        particles.rotation.x = Math.random() * 6;\n        particles.rotation.y = Math.random() * 6;\n        particles.rotation.z = Math.random() * 6;\n      }\n\n      mesh = new THREE.Mesh(geometry, material);\n      mesh.scale.set(500, 500, 500);\n      scene.add(mesh);\n      /*\tIf my calculations are correct, when this baby hits 88 miles per hour...\n      you're gonna see some serious shit.\t*/\n\n      renderer = new THREE.WebGLRenderer();\n      /*\tRendererererers particles.\t*/\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n      /*\tProbably 1; unless you're fancy.\t*/\n\n      renderer.setSize(WIDTH, HEIGHT);\n      /*\tFull screen baby Wooooo!\t*/\n\n      container.appendChild(renderer.domElement);\n      /* Let's add all this crazy junk to the page.\t*/\n\n      /* Event Listeners */\n\n      window.addEventListener('resize', onWindowResize, false);\n      document.addEventListener('mousemove', onDocumentMouseMove, false);\n      document.addEventListener('touchstart', onDocumentTouchStart, false);\n      document.addEventListener('touchmove', onDocumentTouchMove, false);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    function render() {\n      var time = Date.now() * 0.00005;\n      camera.position.x += (mouseX - camera.position.x) * 0.05;\n      camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    }\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    }\n    /*\tMobile users?  I got your back homey\t*/\n\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/info-page-2 - cópia/src/components/Threejs.js"],"names":["React","useEffect","THREE","Threejs","scene","camera","renderer","container","HEIGHT","WIDTH","fieldOfView","aspectRatio","nearPlane","farPlane","geometry","mesh","particleCount","i","materials","mouseX","mouseY","windowHalfX","windowHalfY","cameraZ","fogHex","fogDensity","parameterCount","particles","material","init","animate","window","innerHeight","innerWidth","PerspectiveCamera","position","z","Scene","fog","FogExp2","document","createElement","body","appendChild","style","margin","overflow","points","vertex","Vector3","x","Math","random","y","push","BufferGeometry","setFromPoints","geometry2","SphereGeometry","sizes","uniforms","u_size","value","PointsMaterial","size","sizeAttenuation","alphaTest","transparent","shaderMaterial","ShaderMaterial","vertexShader","getElementById","textContent","fragmentShader","PointCloud","rotation","Mesh","scale","set","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","requestAnimationFrame","render","time","Date","now","lookAt","e","clientX","clientY","touches","length","preventDefault","pageX","pageY","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {React, useEffect} from 'react'\nimport * as THREE from 'three';\n\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\t\n\t\tvar scene, camera, renderer;\n\t\n\t\t// I guess we need this stuff too\n\t\tvar container, HEIGHT,\n\t\t\tWIDTH, fieldOfView, aspectRatio,\n\t\t\tnearPlane, farPlane,\n\t\t\tgeometry, mesh, particleCount,\n\t\t\ti,\n\t\t\tmaterials = [],\n\t\t\tmouseX = 0,\n\t\t\tmouseY = 0,\n\t\t\twindowHalfX, windowHalfY, cameraZ,\n\t\t\tfogHex, fogDensity, \n\t\t\tparameterCount, particles, material;\n\t\n\t\tinit();\n\t\tanimate();\n\t\n\t\tfunction init() {\n\t\n\t\t\tHEIGHT = window.innerHeight;\n\t\t\tWIDTH = window.innerWidth;\n\t\t\twindowHalfX = WIDTH / 2;\n\t\t\twindowHalfY = HEIGHT / 2;\n\t\n\t\t\tfieldOfView = 75;\n\t\t\taspectRatio = WIDTH / HEIGHT;\n\t\t\tnearPlane = 1;\n\t\t\tfarPlane = 3000;\n\t\n\t\t\t/* \tfieldOfView — Camera frustum vertical field of view.\n\t\taspectRatio — Camera frustum aspect ratio.\n\t\tnearPlane — Camera frustum near plane.\n\t\tfarPlane — Camera frustum far plane.\n\t\n\t\t- https://threejs.org/docs/#Reference/Cameras/PerspectiveCamera\n\t\n\t\tIn geometry, a frustum (plural: frusta or frustums)\n\t\tis the portion of a solid (normally a cone or pyramid)\n\t\tthat lies between two parallel planes cutting it. - wikipedia.\t\t*/\n\t\n\t\t\tcameraZ = farPlane / 3; /*\tSo, 1000? Yes! move on!\t*/\n\t\n\t\t\tcamera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\t\tcamera.position.z = cameraZ;\n\t\n\t\t\tscene = new THREE.Scene();\n\t\t\tscene.fog = new THREE.FogExp2(fogHex, fogDensity);\n\t\n\t\t\tcontainer = document.createElement('div');\n\t\t\tdocument.body.appendChild(container);\n\t\t\tdocument.body.style.margin = 0;\n\t\t\tdocument.body.style.overflow = 'hidden';\n\t\n\t        const points = [];\n\t\t\tparticleCount = 20000; /* Leagues under the sea */\n\t\n\t\t\t/*\tHope you took your motion sickness pills;\n\t\tWe're about to get loopy.\t*/\n\t\n\t\t\tfor (i = 0; i < particleCount; i++) {\n\t\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvertex.x = Math.random() * 2000 - 1000;\n\t\t\t\tvertex.y = Math.random() * 2000 - 1000;\n\t\t\t\tvertex.z = Math.random() * 2000 - 1000;\n\t\n\t\t\t\tpoints.push(vertex);\n\t\t\t}\n\n\t\t\tgeometry = new THREE.BufferGeometry().setFromPoints( points );\n\t\t\tconst geometry2 = new THREE.SphereGeometry( 500, 32, 32 );\n\t\t\tconst sizes = [];\n\n\t\t\tlet uniforms = {\n\n\t\t\t\tu_size: { value: 10.0 }\n\n\t\t\t};\n\n\t\t\tmaterial = new THREE.PointsMaterial( { size: 35, sizeAttenuation: true, alphaTest: 0.5, transparent: true } );\n\t\t\n\t\t\tconst shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\t\tuniforms: uniforms,\n\t\t\t\tvertexShader: document.getElementById( 'vertexshader' ).textContent,\n\t\t\t\tfragmentShader: document.getElementById( 'fragmentshader' ).textContent,\n\n\t\t\t} );\n\t\n\t\t\t/*\tI told you to take those motion sickness pills.\n\t\tClean that vommit up, we're going again!\t*/\n\t\n\t\t\tfor (i = 0; i < parameterCount; i++) {\n\t\n\t\t\t\tparticles = new THREE.PointCloud(geometry, materials[i]);\n\t\n\t\t\t\tparticles.rotation.x = Math.random() * 6;\n\t\t\t\tparticles.rotation.y = Math.random() * 6;\n\t\t\t\tparticles.rotation.z = Math.random() * 6;\n\t\n\t\t\t}\n\n\t\n\t\t\tmesh = new THREE.Mesh( geometry, material );\n\t\t\tmesh.scale.set( 500, 500, 500 );\n\t\t\t\n\t\t\tscene.add(mesh);\n\n\t\t\t/*\tIf my calculations are correct, when this baby hits 88 miles per hour...\n\t\tyou're gonna see some serious shit.\t*/\n\t\n\t\t\trenderer = new THREE.WebGLRenderer(); /*\tRendererererers particles.\t*/\n\t\t\trenderer.setPixelRatio(window.devicePixelRatio); /*\tProbably 1; unless you're fancy.\t*/\n\t\t\trenderer.setSize(WIDTH, HEIGHT); /*\tFull screen baby Wooooo!\t*/\n\t\n\t\t\tcontainer.appendChild(renderer.domElement); /* Let's add all this crazy junk to the page.\t*/\n\t\n\t\n\t\n\t\t\t/* Event Listeners */\n\t\n\t\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\t\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\t\n\t\t}\n\t\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t\t\n\t\t}\n\t\n\t\tfunction render() {\n\t\t\tvar time = Date.now() * 0.00005;\n\t\n\t\t\tcamera.position.x += (mouseX - camera.position.x) * 0.05;\n\t\t\tcamera.position.y += (-mouseY - camera.position.y) * 0.05;\n\t\n\t\t\tcamera.lookAt(scene.position);\n\t\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\t\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\t\n\t\t/*\tMobile users?  I got your back homey\t*/\n\t\n\t\tfunction onDocumentTouchStart(e) {\n\t\n\t\t\tif (e.touches.length === 1) {\n\t\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onDocumentTouchMove(e) {\n\t\n\t\t\tif (e.touches.length === 1) {\n\t\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction onWindowResize() {\n\t\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}