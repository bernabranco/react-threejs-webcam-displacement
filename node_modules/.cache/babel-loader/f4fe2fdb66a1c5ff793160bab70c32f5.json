{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport texture1 from './circle.png';\nimport Stats from './Stats.js';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    //GET PERFORMACE STATS, COMMENT TO HIDE\n    (function () {\n      var script = document.createElement('script');\n\n      script.onload = function () {\n        var stats = new Stats();\n        document.body.appendChild(stats.dom);\n        requestAnimationFrame(function loop() {\n          stats.update();\n          requestAnimationFrame(loop);\n        });\n      };\n\n      script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\n      document.head.appendChild(script);\n    })(); // Global Variables\n\n\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    let mouseX = 0;\n    let mouseY = 0;\n    const particleCount = 50000;\n    let pointSize = 10; // CREATE SCENE\n\n    const scene = new THREE.Scene();\n    const geometry = new THREE.PlaneGeometry(1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffff00,\n      side: THREE.DoubleSide\n    });\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n    const camera = new THREE.PerspectiveCamera();\n    scene.add(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(sizes.width, sizes.height);\n    container.appendChild(renderer.domElement);\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    let windowHalfX = sizes.width / 2;\n    let windowHalfY = sizes.height / 2;\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-buffer-geometry5/src/components/Threejs.js"],"names":["useEffect","THREE","texture1","Stats","Threejs","script","document","createElement","onload","stats","body","appendChild","dom","requestAnimationFrame","loop","update","src","head","sizes","width","window","innerWidth","height","innerHeight","mouseX","mouseY","particleCount","pointSize","scene","Scene","geometry","PlaneGeometry","material","MeshBasicMaterial","color","side","DoubleSide","plane","Mesh","add","camera","PerspectiveCamera","container","getElementById","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","render","animate","addEventListener","onWindowResize","windowHalfX","windowHalfY","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport texture1 from './circle.png'\nimport Stats from './Stats.js'\n\nexport default function Threejs(){\n\nuseEffect(() => {\n\n\t//GET PERFORMACE STATS, COMMENT TO HIDE\n\t(function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src='//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);})()\n\n\t\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\n\t\tconst particleCount = 50000;\n\t\tlet pointSize = 10;\n\t\t\n\t\t  \n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\n\t\tconst geometry = new THREE.PlaneGeometry( 1, 1 );\n\t\tconst material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );\n\t\tconst plane = new THREE.Mesh( geometry, material );\n\t\tscene.add( plane );\n\n\t\tconst camera = new THREE.PerspectiveCamera();\n\t\tscene.add(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer(); \n\t\trenderer.setPixelRatio(window.devicePixelRatio); \t\n\t\trenderer.setSize(sizes.width, sizes.height); \n\t\tcontainer.appendChild(renderer.domElement); \n\n\t\tfunction render() {\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\n\t\tfunction onWindowResize() {\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\t\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\t\t\n      },[]);\n\nreturn(\n   null\n)\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}