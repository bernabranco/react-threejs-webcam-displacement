{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport Stats from './Stats.js';\nexport default function Threejs() {\n  _s();\n\n  const vertexShader = `\nprecision mediump float;\nuniform float u_time;\n\nvoid main(){\n  gl_Position = vec4(position, 1.0);\n}\n`;\n  const fragmentShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvoid main() {\n  vec2 st = 10.0+gl_FragCoord.xy/u_resolution;\n  vec2 coord = st*17.0;\n  float len;\n\n  for (float i = 0.5; i<1.0; i+=0.1){\n\tcoord.x +=  0.5*sin(coord.y*i +u_time);\n\tcoord.y +=  0.5*sin(coord.x*i + u_time * 0.5);\n  }\n  \n  len = length(vec2(coord.x, coord.y));\n  vec3 color = vec3(fract(len*0.1),sin(len*0.5),fract(len*0.3));\n  gl_FragColor = vec4(color, 1.0);\n}\n`;\n  useEffect(() => {\n    //GET PERFORMACE STATS, COMMENT TO HIDE\n    (function () {\n      var script = document.createElement('script');\n\n      script.onload = function () {\n        var stats = new Stats();\n        document.body.appendChild(stats.dom);\n        requestAnimationFrame(function loop() {\n          stats.update();\n          requestAnimationFrame(loop);\n        });\n      };\n\n      script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\n      document.head.appendChild(script);\n    })(); // Global Variables\n\n\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }; // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas'); // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(sizes.width, sizes.height);\n    container.appendChild(renderer.domElement); // CREATE SCENE\n\n    const scene = new THREE.Scene(); // CREATE GEOMETRY\n\n    const geometry = new THREE.PlaneGeometry(2, 2, 1); // CREATE CUSTOM MATERIAL\n\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        u_time: {\n          value: 1.0\n        },\n        u_resolution: {\n          value: new THREE.Vector2(window.innerWidth, window.innerHeight)\n        },\n        u_mouse: {\n          value: new THREE.Vector2(0, 0)\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh); // CAMERA\n\n    const camera = new THREE.PerspectiveCamera();\n    scene.add(camera);\n\n    function render() {\n      renderer.render(scene, camera); //define shader time\n\n      material.uniforms.u_time.value += 0.04;\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }, []);\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-plane-geometry/src/components/Threejs.js"],"names":["useEffect","THREE","Stats","Threejs","vertexShader","fragmentShader","script","document","createElement","onload","stats","body","appendChild","dom","requestAnimationFrame","loop","update","src","head","sizes","width","window","innerWidth","height","innerHeight","container","getElementById","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","scene","Scene","geometry","PlaneGeometry","material","ShaderMaterial","uniforms","u_time","value","u_resolution","Vector2","u_mouse","mesh","Mesh","add","camera","PerspectiveCamera","render","animate","addEventListener","onWindowResize","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["\nimport {useEffect} from 'react'\nimport * as THREE from 'three';\nimport Stats from './Stats.js'\n\nexport default function Threejs(){\n\nconst vertexShader = `\nprecision mediump float;\nuniform float u_time;\n\nvoid main(){\n  gl_Position = vec4(position, 1.0);\n}\n`\n\nconst fragmentShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvoid main() {\n  vec2 st = 10.0+gl_FragCoord.xy/u_resolution;\n  vec2 coord = st*17.0;\n  float len;\n\n  for (float i = 0.5; i<1.0; i+=0.1){\n\tcoord.x +=  0.5*sin(coord.y*i +u_time);\n\tcoord.y +=  0.5*sin(coord.x*i + u_time * 0.5);\n  }\n  \n  len = length(vec2(coord.x, coord.y));\n  vec3 color = vec3(fract(len*0.1),sin(len*0.5),fract(len*0.3));\n  gl_FragColor = vec4(color, 1.0);\n}\n`\n\nuseEffect(() => {\n\n\t//GET PERFORMACE STATS, COMMENT TO HIDE\n\t(function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src='//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);})()\n\n\t// Global Variables\n\tlet sizes = {\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight\n\t}\n\n\t// FRONT-END PART\n\tlet container = document.getElementById('webgl-canvas');\n\n\t// RENDERER\n\tconst renderer = new THREE.WebGLRenderer(); \n\trenderer.setPixelRatio(window.devicePixelRatio); \t\n\trenderer.setSize(sizes.width, sizes.height); \n\tcontainer.appendChild(renderer.domElement); \n\n\t// CREATE SCENE\n\tconst scene = new THREE.Scene();\n\t\n\t// CREATE GEOMETRY\n\tconst geometry = new THREE.PlaneGeometry( 2, 2, 1);\n\n\t// CREATE CUSTOM MATERIAL\n\tconst material = new THREE.ShaderMaterial({\n\t\tuniforms: {\n\t\t\tu_time: { value: 1.0 },\n\t\t\tu_resolution: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n\t\t\tu_mouse: {value: new THREE.Vector2(0, 0)},\n\t\t},\n\t\tvertexShader: vertexShader,\n\t\tfragmentShader: fragmentShader\n\t});\n\t\n\t\n\tconst mesh = new THREE.Mesh( geometry, material );\n\tscene.add(mesh);\n\n\t// CAMERA\n\tconst camera = new THREE.PerspectiveCamera();\n\tscene.add(camera)\n\n\tfunction render() {\n\t\trenderer.render(scene, camera);\n\t\t//define shader time\n\t\tmaterial.uniforms.u_time.value += 0.04;\n\t}\n\n\tfunction animate() {\n\t\trequestAnimationFrame(animate);\n\t\trender();\n\t}\n\tanimate();\n\n\t// EVENT LISTENERS\n\twindow.addEventListener('resize', onWindowResize, false);\n\n\tfunction onWindowResize() {\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t}\n\t\n\t},[]);\n\nreturn(\n   null\n)\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}