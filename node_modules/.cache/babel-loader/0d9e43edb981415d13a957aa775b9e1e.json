{"ast":null,"code":"/**\n * @author mrdoob / http://mrdoob.com/\n */\nvar Stats = function () {\n  var mode = 0;\n  var container = document.createElement('div');\n  container.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n  container.addEventListener('click', function (event) {\n    event.preventDefault();\n    showPanel(++mode % container.children.length);\n  }, false); //\n\n  function addPanel(panel) {\n    container.appendChild(panel.dom);\n    return panel;\n  }\n\n  function showPanel(id) {\n    for (var i = 0; i < container.children.length; i++) {\n      container.children[i].style.display = i === id ? 'block' : 'none';\n    }\n\n    mode = id;\n  } //\n\n\n  var beginTime = (performance || Date).now(),\n      prevTime = beginTime,\n      frames = 0;\n  var fpsPanel = addPanel(new Stats.Panel('FPS', '#0ff', '#002'));\n  var msPanel = addPanel(new Stats.Panel('MS', '#0f0', '#020'));\n\n  if (this.performance && this.performance.memory) {\n    var memPanel = addPanel(new Stats.Panel('MB', '#f08', '#201'));\n  }\n\n  showPanel(0);\n  return {\n    REVISION: 16,\n    dom: container,\n    addPanel: addPanel,\n    showPanel: showPanel,\n    begin: function () {\n      beginTime = (performance || Date).now();\n    },\n    end: function () {\n      frames++;\n      var time = (performance || Date).now();\n      msPanel.update(time - beginTime, 200);\n\n      if (time >= prevTime + 1000) {\n        fpsPanel.update(frames * 1000 / (time - prevTime), 100);\n        prevTime = time;\n        frames = 0;\n\n        if (memPanel) {\n          var memory = performance.memory;\n          memPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\n        }\n      }\n\n      return time;\n    },\n    update: function () {\n      beginTime = this.end();\n    },\n    // Backwards Compatibility\n    domElement: container,\n    setMode: showPanel\n  };\n};\n\n_c = Stats;\n\nStats.Panel = function (name, fg, bg) {\n  var min = Infinity,\n      max = 0,\n      round = Math.round;\n  var PR = round(window.devicePixelRatio || 1);\n  var WIDTH = 80 * PR,\n      HEIGHT = 48 * PR,\n      TEXT_X = 3 * PR,\n      TEXT_Y = 2 * PR,\n      GRAPH_X = 3 * PR,\n      GRAPH_Y = 15 * PR,\n      GRAPH_WIDTH = 74 * PR,\n      GRAPH_HEIGHT = 30 * PR;\n  var canvas = document.createElement('canvas');\n  canvas.width = WIDTH;\n  canvas.height = HEIGHT;\n  canvas.style.cssText = 'width:80px;height:48px';\n  var context = canvas.getContext('2d');\n  context.font = 'bold ' + 9 * PR + 'px Helvetica,Arial,sans-serif';\n  context.textBaseline = 'top';\n  context.fillStyle = bg;\n  context.fillRect(0, 0, WIDTH, HEIGHT);\n  context.fillStyle = fg;\n  context.fillText(name, TEXT_X, TEXT_Y);\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n  context.fillStyle = bg;\n  context.globalAlpha = 0.9;\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n  return {\n    dom: canvas,\n    update: function (value, maxValue) {\n      min = Math.min(min, value);\n      max = Math.max(max, value);\n      context.fillStyle = bg;\n      context.globalAlpha = 1;\n      context.fillRect(0, 0, WIDTH, GRAPH_Y);\n      context.fillStyle = fg;\n      context.fillText(round(value) + ' ' + name + ' (' + round(min) + '-' + round(max) + ')', TEXT_X, TEXT_Y);\n      context.drawImage(canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT);\n      context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\n      context.fillStyle = bg;\n      context.globalAlpha = 0.9;\n      context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round((1 - value / maxValue) * GRAPH_HEIGHT));\n    }\n  };\n};\n\nexport { Stats as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-buffer-geometry5/src/components/Stats.js"],"names":["Stats","mode","container","document","createElement","style","cssText","addEventListener","event","preventDefault","showPanel","children","length","addPanel","panel","appendChild","dom","id","i","display","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","default"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( this.performance && this.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport { Stats as default };"]},"metadata":{},"sourceType":"module"}